<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7编译安装Mysql5.7</title>
    <url>/2018/10/19/Centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Mysql5-7/</url>
    <content><![CDATA[<h5 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h5><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cat</span> /etc/centos-release</span><br><span class="line"><span class="attribute">CentOS</span> Linux release <span class="number">7</span>.<span class="number">5</span>.<span class="number">1804</span> (Core)</span><br></pre></td></tr></table></figure>

<h5 id="安装所需依赖"><a href="#安装所需依赖" class="headerlink" title="安装所需依赖"></a>安装所需依赖</h5><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">yum -y <span class="keyword">install </span>gcc cmake make gcc-c++ ncurses-devel openssl-devel <span class="keyword">bison </span>ncurses chkconfig lsof</span><br></pre></td></tr></table></figure>
<span id="more"></span>


<h5 id="卸载系统自带Mariadb及删除遗留的配置文件"><a href="#卸载系统自带Mariadb及删除遗留的配置文件" class="headerlink" title="卸载系统自带Mariadb及删除遗留的配置文件"></a>卸载系统自带Mariadb及删除遗留的配置文件</h5><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看centos 默认安装的mariadb </span></span><br><span class="line">[root@VM_0_15_centos ~]<span class="comment"># rpm -qa | grep mariadb</span></span><br><span class="line">mariadb-libs<span class="number">-5.5</span><span class="number">.56</span><span class="number">-2.</span>el7.x86_64</span><br><span class="line"><span class="comment"># 强制卸载mariadb</span></span><br><span class="line">rpm -e <span class="comment">--nodeps mariadb-libs-5.5.56-2.el7.x86_64</span></span><br><span class="line"><span class="comment">#删除对应的mariadb配置文件</span></span><br><span class="line">rm -rf /etc/<span class="keyword">my</span>.cnf</span><br></pre></td></tr></table></figure>

<h5 id="下载MySql文件"><a href="#下载MySql文件" class="headerlink" title="下载MySql文件"></a>下载MySql文件</h5><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入到/usr/local/src</span></span><br><span class="line">cd /usr/local/src</span><br><span class="line"><span class="comment">#下载文件（因mysql5.7之后必须要安装boost库，所以这里直接下载带boost的mysql源码）</span></span><br><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-<span class="number">5.7</span>/mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载成功</span></span><br><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-<span class="number">5.7</span>/mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz</span><br><span class="line">--<span class="number">2018</span>-<span class="number">10</span>-<span class="number">19</span> <span class="number">22</span>:<span class="number">46</span>:<span class="number">26</span>--  https://cdn.mysql.com//Downloads/MySQL-<span class="number">5.7</span>/mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz</span><br><span class="line">Resolving cdn.mysql.com (cdn.mysql.com)... <span class="number">23.56</span>.<span class="number">25.233</span></span><br><span class="line">Connecting to cdn.mysql.com (cdn.mysql.com)|<span class="number">23.56</span>.<span class="number">25.233</span>|:<span class="number">443</span>... connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line">Length: <span class="number">49025014</span> (<span class="number">47</span>M) [application/x-tar-gz]</span><br><span class="line">Saving to: ‘mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz’</span><br><span class="line"></span><br><span class="line"><span class="number">100</span>%[==============================================================================================&gt;] <span class="number">49</span>,<span class="number">025</span>,<span class="number">014</span>   <span class="number">523</span>KB/s   <span class="keyword">in</span> <span class="number">64</span>s    </span><br><span class="line"></span><br><span class="line"><span class="number">2018</span>-<span class="number">10</span>-<span class="number">19</span> <span class="number">22</span>:<span class="number">47</span>:<span class="number">47</span> (<span class="number">747</span> KB/s) - ‘mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz’ saved [<span class="number">49025014</span>/<span class="number">49025014</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压文件</span></span><br><span class="line">tar zxvf mysql-boost-<span class="number">5.7</span>.<span class="number">23</span>.tar.gz</span><br><span class="line"><span class="comment">#进入目录</span></span><br><span class="line">cd mysql-<span class="number">5.7</span>.<span class="number">23</span></span><br><span class="line"><span class="comment">#编译参数</span></span><br><span class="line">cmake <span class="attr">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql</span> <span class="attr">-DMYSQL_DATADIR=/usr/local/mysql/data</span> <span class="attr">-DSYSCONFDIR=/etc</span> <span class="attr">-DWITH_MYISAM_STORAGE_ENGINE=1</span> <span class="attr">-DWITH_INNOBASE_STORAGE_ENGINE=1</span> <span class="attr">-DWITH_ARCHIVE_STORAGE_ENGINE=1</span> <span class="attr">-DWITH_MEMORY_STORAGE_ENGINE=1</span> <span class="attr">-DWITH_READLINE=1</span> <span class="attr">-DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock</span> <span class="attr">-DMYSQL_TCP_PORT=3306</span> <span class="attr">-DENABLED_LOCAL_INFILE=1</span> <span class="attr">-DENABLE_DOWNLOADS=1</span> <span class="attr">-DWITH_PARTITION_STORAGE_ENGINE=1</span> <span class="attr">-DEXTRA_CHARSETS=all</span> <span class="attr">-DDEFAULT_CHARSET=utf8</span> <span class="attr">-DDEFAULT_COLLATION=utf8_general_ci</span> <span class="attr">-DWITH_DEBUG=0</span> <span class="attr">-DMYSQL_MAINTAINER_MODE=0</span> -DWITH_SSL:<span class="attr">STRING=bundled</span> -DWITH_ZLIB:<span class="attr">STRING=bundled</span> <span class="attr">-DWITH_BOOST=boost</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化完成</span></span><br><span class="line"></span><br><span class="line">-- CMAKE_BUILD_TYPE: RelWithDebInfo</span><br><span class="line">-- COMPILE_DEFINITIONS: _GNU_SOURCE;<span class="attr">_FILE_OFFSET_BITS=64;HAVE_CONFIG_H;HAVE_LIBEVENT1</span></span><br><span class="line">-- CMAKE_C_FLAGS:  -Wall -Wextra -Wformat-security -Wvla -Wwrite-strings -Wdeclaration-after-statement</span><br><span class="line">-- CMAKE_CXX_FLAGS:  -Wall -Wextra -Wformat-security -Wvla -Woverloaded-virtual -Wno-unused-parameter</span><br><span class="line">-- CMAKE_C_LINK_FLAGS: </span><br><span class="line">-- CMAKE_CXX_LINK_FLAGS: </span><br><span class="line">-- CMAKE_C_FLAGS_RELWITHDEBINFO: -O3 -g <span class="attr">-fabi-version=2</span> -fno-omit-frame-pointer -fno-strict-aliasing -DDBUG_OFF</span><br><span class="line">-- CMAKE_CXX_FLAGS_RELWITHDEBINFO: -O3 -g <span class="attr">-fabi-version=2</span> -fno-omit-frame-pointer -fno-strict-aliasing -DDBUG_OFF</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: /usr/local/src/mysql-<span class="number">5.7</span>.<span class="number">23</span></span><br></pre></td></tr></table></figure>

<h5 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h5><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>

<h5 id="添加mysql用户和用户组"><a href="#添加mysql用户和用户组" class="headerlink" title="添加mysql用户和用户组"></a>添加mysql用户和用户组</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd mysql -g mysql -M -s <span class="regexp">/sbin/</span>nologin</span><br></pre></td></tr></table></figure>

<h5 id="给mysql用户授权mysql-文件夹"><a href="#给mysql用户授权mysql-文件夹" class="headerlink" title="给mysql用户授权mysql 文件夹"></a>给mysql用户授权mysql 文件夹</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">chown -R mysql:mysql <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span></span><br></pre></td></tr></table></figure>

<h5 id="拷贝启动文件"><a href="#拷贝启动文件" class="headerlink" title="拷贝启动文件"></a>拷贝启动文件</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>support-files<span class="regexp">/mysql.server /</span>etc<span class="regexp">/init.d/</span></span><br></pre></td></tr></table></figure>

<h5 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用-initialize会生成随机密码，使用-initialize-insecure生成空密码，这里选择生成空密码。</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>bin/mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></table></figure>

<h5 id="启动MySql"><a href="#启动MySql" class="headerlink" title="启动MySql"></a>启动MySql</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动MySql</span></span><br><span class="line"><span class="regexp">/etc/i</span>nit.d/mysql.server start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/usr/local/mysql/data/VM_0_15_centos.err&#x27;</span>.</span><br><span class="line">SUCCESS!</span><br></pre></td></tr></table></figure>

<h5 id="添加至环境变量"><a href="#添加至环境变量" class="headerlink" title="添加至环境变量"></a>添加至环境变量</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使其永久生效，把安装目录添加至环境变量</span></span><br><span class="line">vim <span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="comment">#文件最后一行添加进去</span></span><br><span class="line">export PATH=<span class="variable">$PATH</span>:<span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>bin</span><br><span class="line"><span class="comment">#马上生效</span></span><br><span class="line">source <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure>

<h5 id="登陆mysql"><a href="#登陆mysql" class="headerlink" title="登陆mysql"></a>登陆mysql</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">mysql -uroot -<span class="selector-tag">p</span></span><br></pre></td></tr></table></figure>

<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">#查看数据库</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line">#修改root密码为123456</span><br><span class="line">mysql&gt; set password for root@localhost = password(<span class="emphasis">&#x27;123456&#x27;</span>);</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line">#退出mysql，重新登陆生效</span><br><span class="line">mysql&gt; exit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure>

<p>注意事项：</p>
<p> MySql5.7.18之后版本默认不再提供my.cnf 配置文件</p>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>CDH大数据集群之CDH部署（二）</title>
    <url>/2021/05/07/CDH%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4%E4%B9%8BCDH%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h2><ul>
<li>配置参数列表</li>
</ul>
<table>
<thead>
<tr>
<th>IP</th>
<th>主机名</th>
<th>环境配置</th>
<th>安装</th>
</tr>
</thead>
<tbody><tr>
<td>10.150.1.32</td>
<td>cdh1</td>
<td>关闭防火墙和SELinux,host映射，时钟同步，密码一致</td>
<td>JDK 、数据库驱动等</td>
</tr>
<tr>
<td>10.150.1.33</td>
<td>cdh2</td>
<td>关闭防火墙和SELinux,host映射，时钟同步，密码一致</td>
<td>JDK 、数据库驱动等</td>
</tr>
<tr>
<td>10.150.1.34</td>
<td>cdh3</td>
<td>关闭防火墙和SELinux,host映射，时钟同步，密码一致</td>
<td>JDK 、数据库驱动等</td>
</tr>
</tbody></table>
<span id="more"></span>
<ul>
<li>集群配置</li>
</ul>
<table>
<thead>
<tr>
<th>主机名</th>
<th>Server</th>
<th>Agent</th>
<th>MySQL</th>
</tr>
</thead>
<tbody><tr>
<td>cdh1</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>cdh2</td>
<td></td>
<td>√</td>
<td></td>
</tr>
<tr>
<td>cdh3</td>
<td></td>
<td>√</td>
<td></td>
</tr>
</tbody></table>
<h2 id="关闭SElinux和防火墙"><a href="#关闭SElinux和防火墙" class="headerlink" title="关闭SElinux和防火墙"></a>关闭SElinux和防火墙</h2><p>所有节点皆需执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config <span class="comment">#永久</span></span><br><span class="line">setenforce 0 <span class="comment">#临时</span></span><br><span class="line"><span class="comment">#关闭selinux</span></span><br></pre></td></tr></table></figure>

<h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><p>所有节点皆需执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure>

<h2 id="主机名及hosts修改"><a href="#主机名及hosts修改" class="headerlink" title="主机名及hosts修改"></a>主机名及hosts修改</h2><p>根据规划设置主机名</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">hostnamectl</span> <span class="built_in">set-hostname</span> &lt;<span class="string">hostname</span>&gt;</span><br></pre></td></tr></table></figure>

<p>10.150.1.32的主机执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname cdh1</span><br></pre></td></tr></table></figure>

<p>10.150.1.33的主机执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname cdh2</span><br></pre></td></tr></table></figure>

<p>10.150.1.34的主机执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname cdh3</span><br></pre></td></tr></table></figure>

<p>修改主机名隐射，所有节点皆需执行</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line"><span class="number">10.150.1.32</span> cdh1</span><br><span class="line"><span class="number">10.150.1.33</span> cdh2</span><br><span class="line"><span class="number">10.150.1.34</span> cdh3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h2 id="配置ssh免密"><a href="#配置ssh免密" class="headerlink" title="配置ssh免密"></a>配置ssh免密</h2><p>所有节点皆需执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i ~root/.ssh/id_rsa.pub root@cdh1</span><br><span class="line">ssh-copy-id -i ~root/.ssh/id_rsa.pub root@cdh2</span><br><span class="line">ssh-copy-id -i ~root/.ssh/id_rsa.pub root@cdh3</span><br></pre></td></tr></table></figure>



<h2 id="系统参数设置"><a href="#系统参数设置" class="headerlink" title="系统参数设置"></a>系统参数设置</h2><p>所有节点皆需执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl vm.swappiness=10</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;vm.swappiness=10&#x27;</span>&gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag&#x27;</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27;</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure>

<h1 id="CM安装"><a href="#CM安装" class="headerlink" title="CM安装"></a>CM安装</h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>主节点安装即可，这里采用使用我编写的mysql安装脚本一键安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/bash</span></span><br><span class="line">GROUP=&quot;mysql&quot;  </span><br><span class="line">USER=&quot;mysql&quot;  </span><br><span class="line">MYSQL_HOME=&quot;/usr/local/mysql/&quot;  </span><br><span class="line">MYSQL_DATA_HOME=&quot;/data/mysql/data&quot; </span><br><span class="line">MYSQL_VERSION=&quot;mysql-5.7.33-linux-glibc2.12-x86_64&quot;  </span><br><span class="line">DOWNLOAD_PATH=&quot;/usr/local/src&quot;</span><br><span class="line">if [ $(id -u) != &quot;0&quot; ];then  </span><br><span class="line">   echo -e &quot;\033[31m Error: You must be root to run this script! \033[0m&quot;</span><br><span class="line">   exit 1  </span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash">root账号校验</span></span><br><span class="line">ping -c 1 -W 1 baidu.com &amp;&gt; /dev/null || echo -e &quot;\033[5;31m Network is not working, Please check\033[0m&quot;</span><br><span class="line">ping -c 1 -W 1 baidu.com &amp;&gt; /dev/null || exit 4</span><br><span class="line"><span class="meta">#</span><span class="bash">网络检查</span></span><br><span class="line"></span><br><span class="line">rpm -e --nodeps `rpm -qa | grep mariadb`</span><br><span class="line"><span class="meta">#</span><span class="bash">卸载自带mariadb</span></span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/selinux/config &amp;&amp; systemctl stop firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash">关闭selinux和防火墙</span></span><br><span class="line"></span><br><span class="line">echo &quot;=================================start install mysql===================================&quot;</span><br><span class="line">if [ -z $(cat /etc/group|awk -F: &#x27;&#123;print $1&#125;&#x27;| grep -w &quot;$GROUP&quot;) ]  </span><br><span class="line">then  </span><br><span class="line">  groupadd  $GROUP</span><br><span class="line">    if(( $? == 0 ))  </span><br><span class="line">      then  </span><br><span class="line">      echo &quot;group $GROUP add sucessfully!&quot;</span><br><span class="line">    fi       </span><br><span class="line">else </span><br><span class="line">  echo &quot;$GROUP is exsits&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -z $(cat /etc/passwd|awk -F: &#x27;&#123;print $1&#125;&#x27;| grep -w &quot;$USER&quot;) ]  </span><br><span class="line">then  </span><br><span class="line">  adduser -g $GROUP $USER  </span><br><span class="line">     if (( $? == 0 ))  </span><br><span class="line">       then  </span><br><span class="line">       echo &quot;user $USER add sucessfully!&quot;</span><br><span class="line">     fi  </span><br><span class="line">else  </span><br><span class="line">  echo &quot;$USER is exsits&quot;  </span><br><span class="line">fi</span><br><span class="line">for i in  wget </span><br><span class="line">do    </span><br><span class="line">         yum -y install $i   </span><br><span class="line">done  &gt;/dev/null</span><br><span class="line">echo &quot;==================================downloading mysql====================================&quot;</span><br><span class="line">if [ ! -f &quot;$&#123;DOWNLOAD_PATH&#125;/$&#123;MYSQL_VERSION&#125;.tar.gz&quot; ]; then</span><br><span class="line"> wget https://cdn.mysql.com//Downloads/MySQL-5.7/$&#123;MYSQL_VERSION&#125;.tar.gz -P $&#123;DOWNLOAD_PATH&#125;  &gt;/dev/null</span><br><span class="line">fi</span><br><span class="line">     if(( $? == 0 ))  </span><br><span class="line">       then   </span><br><span class="line">        echo &quot;MySQL DownLoad sucessfully!&quot;   </span><br><span class="line">       else   </span><br><span class="line">        echo &quot;MySQL DownLoad failed!&quot;  </span><br><span class="line">        exit 1 </span><br><span class="line">     fi  </span><br><span class="line">cd $&#123;DOWNLOAD_PATH&#125; </span><br><span class="line">echo &quot;=================================unpackaging mysql=====================================&quot;</span><br><span class="line">tar xzvf $&#123;MYSQL_VERSION&#125;.tar.gz -C /usr/local/</span><br><span class="line">mv /usr/local/$&#123;MYSQL_VERSION&#125;  /usr/local/mysql </span><br><span class="line">if [ -s /etc/my.cnf ]; then  </span><br><span class="line">        mv /etc/my.cnf /etc/my.cnf.`date +%Y%m%d%H%M%S`.bak  </span><br><span class="line">fi </span><br><span class="line">cat &lt;&lt; EOF &gt;/etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0 #绑定的IP</span><br><span class="line">port=3306 #mysql占用的端口</span><br><span class="line">basedir=/usr/local/mysql #mysql安装目录</span><br><span class="line">datadir=/data/mysql/data #mysql数据目录</span><br><span class="line">socket=/tmp/mysql.sock   #socket位置</span><br><span class="line">log-error=/data/mysql/logs/mysql.err #error日志路径</span><br><span class="line">pid-file=mysql.pid  #进程id文件</span><br><span class="line"><span class="meta">#</span><span class="bash">character config</span></span><br><span class="line">character_set_server=utf8mb4 #编码格式</span><br><span class="line">symbolic-links=0 #关闭符号链接</span><br><span class="line">explicit_defaults_for_timestamp=true</span><br><span class="line">lower_case_table_names=1 #不区分大小写</span><br><span class="line">log_bin =/data/mysql/binlog/mysql-bin #logbin文件路径</span><br><span class="line">binlog_format=row #binlog</span><br><span class="line">max_connections =1024 #mysql最大连接数</span><br><span class="line">server-id=1 #数据库服务器ID，配置主从或者集群时 server id必须唯一</span><br><span class="line">sync_binlog=1 #二进制日志文件刷新到磁盘上</span><br><span class="line">expire_logs_days = 30 #binlog日志 超过30天的自动清理</span><br><span class="line">slow_query_log = 1 #启用慢查询日志</span><br><span class="line">long_query_time = 2 #慢查询时间</span><br><span class="line">slow_query_log_file=/data/mysql/logs/slow.log #慢查询日志路径</span><br><span class="line">EOF</span><br><span class="line">mkdir -p /data/mysql/&#123;binlog,data,logs&#125;</span><br><span class="line">chown -R mysql:mysql $MYSQL_HOME</span><br><span class="line">chown -R mysql:mysql /data/mysql/</span><br><span class="line"><span class="meta">$</span><span class="bash">MYSQL_HOME/bin/mysqld --initialize-insecure --user=<span class="variable">$USER</span></span></span><br><span class="line">cp $MYSQL_HOME/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">chmod +x /etc/rc.d/init.d/mysql</span><br><span class="line">chkconfig --add mysql</span><br><span class="line">echo &quot;export PATH=$PATH:/usr/local/mysql/bin/&quot; &gt;&gt;/etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line">echo &quot;==========================Mysql installation completed================================&quot;</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<h3 id="mysql-设置密码"><a href="#mysql-设置密码" class="headerlink" title="mysql 设置密码"></a>mysql 设置密码</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">set password for root@localhost = password(&#x27;123456&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="mysql开启远程连接"><a href="#mysql开启远程连接" class="headerlink" title="mysql开启远程连接"></a>mysql开启远程连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<h3 id="mysql-创建表"><a href="#mysql-创建表" class="headerlink" title="mysql 创建表"></a>mysql 创建表</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database activity default character <span class="built_in">set</span> = <span class="string">&#x27;utf8&#x27;</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database hive default character <span class="built_in">set</span> = <span class="string">&#x27;utf8&#x27;</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.06 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database hue default character <span class="built_in">set</span> = <span class="string">&#x27;utf8&#x27;</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database oozie default character <span class="built_in">set</span> = <span class="string">&#x27;utf8&#x27;</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database reports default character <span class="built_in">set</span> = <span class="string">&#x27;utf8&#x27;</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br></pre></td></tr></table></figure>

<h3 id="配置MySQL驱动"><a href="#配置MySQL驱动" class="headerlink" title="配置MySQL驱动"></a>配置MySQL驱动</h3><p>每个节点都需安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://cdn.mysql.com//archives/mysql-connector-java-5.1/mysql-connector-java-5.1.46.tar.gz &amp;&amp; mkdir -p /usr/share/java</span><br><span class="line"></span><br><span class="line">tar zxvf mysql-connector-java-5.1.46.tar.gz &amp;&amp;  cp mysql-connector-java-5.1.46/mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar</span><br></pre></td></tr></table></figure>

<h2 id="安装CM"><a href="#安装CM" class="headerlink" title="安装CM"></a>安装CM</h2><p><strong>搭建本地yum源</strong></p>
<p>注：任意节点搭建即可，这里采用主节点搭建</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">更新yum源httpd</span></span><br><span class="line">yum -y install httpd</span><br><span class="line"><span class="meta">#</span><span class="bash">查看httpd状态</span></span><br><span class="line">systemctl status httpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash">启动httpd</span></span><br><span class="line">service httpd start</span><br><span class="line"><span class="meta">#</span><span class="bash">配置httpd永久生效（重启生效）</span></span><br><span class="line">chkconfig httpd on</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">更新yum源yum-utils createrepo</span></span><br><span class="line">yum -y install yum-utils createrepo</span><br><span class="line"><span class="meta">#</span><span class="bash">进入yum源路径</span></span><br><span class="line">cd /var/www/html/</span><br><span class="line"><span class="meta">#</span><span class="bash">创建cm文件夹</span></span><br><span class="line">mkdir cm</span><br></pre></td></tr></table></figure>

<p>上传资源文件到httpd文件路径</p>
<p>官方地址：<a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/cm-retrofit-auth-downloads.html">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/cm-retrofit-auth-downloads.html</a>  </p>
<p>注：自2021年2月1日起，所有CDH和Cloudera Manager的下载都需要用户名和密码，教程这里选择以前下载的资源文件。</p>
<p>百度网盘：<a href="https://pan.baidu.com/s/1j4BpzMJ53UblqjZBW5RO6Q">https://pan.baidu.com/s/1j4BpzMJ53UblqjZBW5RO6Q</a> 提取码：4f2s</p>
<p><strong>创建本地源</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">createrepo /var/www/html/cm/</span><br></pre></td></tr></table></figure>

<p><strong>创建repo</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/cloudera-manager.repo</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下内容</span></span><br><span class="line">[cloudera-manager]</span><br><span class="line">name=Cloudera Manager, Version yum</span><br><span class="line">baseurl=http://10.150.1.32/cm</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>

<p><strong>更新yum源</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<p><strong>验证</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum list | grep cloudera-manager</span><br></pre></td></tr></table></figure>

<p><strong>分发repo文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp /etc/yum.repos.d/cloudera-manager.repo root@cdh2:/etc/yum.repos.d/</span><br><span class="line">scp /etc/yum.repos.d/cloudera-manager.repo root@cdh3:/etc/yum.repos.d/</span><br></pre></td></tr></table></figure>

<p><strong>安装JDK</strong></p>
<p>所有节点，皆需安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install oracle-j2sdk1.8</span><br></pre></td></tr></table></figure>

<p><strong>cdh1节点安装</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install cloudera-manager-daemons</span><br><span class="line">yum -y install cloudera-manager-server</span><br><span class="line">yum -y install cloudera-manager-agent</span><br></pre></td></tr></table></figure>

<p><strong>cdh2和cdh3节点安装</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install cloudera-manager-daemons</span><br><span class="line">yum -y install cloudera-manager-agent</span><br></pre></td></tr></table></figure>

<p><strong>配置CDH数据库</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/cloudera/cm/schema/scm_prepare_database.sh mysql -hlocalhost -uroot -p scm scm</span><br></pre></td></tr></table></figure>

<h1 id="CDH安装"><a href="#CDH安装" class="headerlink" title="CDH安装"></a>CDH安装</h1><p>上传文件到/opt/cloudera/parcel-repo 目录 并复制sha文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel.sha1 CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel.sha</span><br></pre></td></tr></table></figure>

<p>修改所属组权限 cloudera-scm</p>
<p>如下图所示</p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510150258.png" alt="cdh20210510150258"></p>
<p><strong>启动cloudera-manager-server</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable cloudera-scm-server &amp;&amp; systemctl start cloudera-scm-server</span><br></pre></td></tr></table></figure>

<p>登入web控制台，进行服务的部署（cdh1节点的IP+7180端口，帐号密码默认都是admin）</p>
<p><img src="https://img.ssmwolf.com/cdhcdhlogin.png"></p>
<p><strong>继续下一步</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510143223.png" alt="cdh20210510143223"></p>
<p><strong>同意许可</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510144638.png" alt="cdh20210510144638"></p>
<p><strong>选择企业试用版</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510144742.png" alt="cdh20210510144742"></p>
<p><strong>开始进行集群的安装</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510144911.png" alt="cdh20210510144911"></p>
<p><strong>填写集群名字</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510145012.png" alt="cdh20210510145012"></p>
<p><strong>填写主机名并点击搜索按钮</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510145140.png" alt="cdh20210510145140"></p>
<p><strong>填写本地yum源地址并检查cdh版本是否和上传的文件一致</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510150835.png" alt="cdh20210510150835"></p>
<p><strong>jdk之前的步骤已安装，现在直接下一步即可</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510150959.png" alt="cdh20210510150959"></p>
<p><strong>输入统一的服务器密码</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510151120.png" alt="cdh20210510151120"></p>
<p><strong>开始安装agent</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510151335.png" alt="cdh20210510151335"></p>
<p><strong>agent安装完成</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510151416.png" alt="cdh20210510151416"></p>
<p><strong>安装Parcels</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510151520.png" alt="cdh20210510151520"></p>
<p><strong>性能检查</strong></p>
<p><img src="https://img.ssmwolf.com/cdhcdh20210510152051.png" alt="cdh20210510152051"></p>
<p><strong>选择服务安装</strong></p>
<p><img src="https://img.ssmwolf.com/cdh20210510164824.png" alt="20210510164824"></p>
<p><strong>数据库配置</strong></p>
<p><img src="https://img.ssmwolf.com/cdh20210510171218.png"></p>
<p><strong>至此，cdh集群搭建完成</strong></p>
<p><img src="https://img.ssmwolf.com/cdh20210510172811.png" alt="20210510172811"></p>
<h1 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h1><p><a href="http://www.fblinux.com/?p=1492">1.CDH和CM介绍及搭建</a></p>
<p><a href="https://www.cnblogs.com/alidata/p/13394358.html">2.CDH 安装与部署</a></p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>CDH</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>CDH大数据集群之CDH介绍（一）</title>
    <url>/2021/04/28/CDH%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4%E4%B9%8BCDH%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="CDH介绍"><a href="#CDH介绍" class="headerlink" title="CDH介绍"></a>CDH介绍</h2><h3 id="什么是CDH"><a href="#什么是CDH" class="headerlink" title="什么是CDH"></a>什么是CDH</h3><p>CDH（Cloudera’s Distribution Including Apache Hadoop）是Hadoop发行版的一种，是一套目前比较完整的、充分测试的Hadoop及其相关项目的发行版。CDH的基础组件均基于apache license开源，无论是个人学习还是企业使用都比较有保障。</p>
<p>CDH提供以下特性：</p>
<p><strong>灵活性</strong>：能够存储各种类型的数据，并使用各种不同的计算框架进行操作，包括批处理、交互式sql、文本搜索、机器学习和统计计算。</p>
<span id="more"></span>
<p><strong>集成性</strong>：能够快速集成和运行一个完整的Hadoop平台，适用于各种不同的硬件和软件。</p>
<p><strong>安全性</strong>：处理和控制敏感数据。</p>
<p><strong>扩展性</strong>：能够部署多种应用，并扩展和扩充它们以满足你的需求。</p>
<p><strong>高可用性</strong>：可以放心地用于关键的商业任务。</p>
<p><strong>兼容性</strong>：可以利用你现有的IT基础设施和资源。</p>
<h3 id="什么是CM"><a href="#什么是CM" class="headerlink" title="什么是CM"></a>什么是CM</h3><p>CM（cloudera Manager）是一种管理CDH集群的端到端的应用。CM通过对CDH集群的各部分提供精细的可视化和控制，建立了企业级部署的标准，增强了操作人员的能力以提升性能、提升服务质量、提高合规性、降低管理成本。</p>
<p>通过CM，技术人员可以很容易地部署和集中化操作CDH技术栈和其他可托管的服务。它使安装过程自动化，使部署时间从几个星期减少到几分钟；提供了一个集群范围、实时的主机和服务运行情况的视图；提供了一个单一的中央控制台，以对集群配置进行变更；并采用全方位的报告和诊断工具来帮助你优化性能和利用率。</p>
<h3 id="CM架构"><a href="#CM架构" class="headerlink" title="CM架构"></a>CM架构</h3><p>CM的核心是cloudera Manager Server。Server承载了管理员控制台（Admin Console Web Server）和应用逻辑，并负责安装软件、配置、启动、停止服务，以及管理运行有服务的集群。</p>
<p>Cloudera Manager Server与以下几个组件一同工作：</p>
<p><strong>代理</strong>：在每个主机上安装，负责启动和停止进行、解包配置、触发安装、监控主机。</p>
<p><strong>管理服务</strong>：由一组角色组成的服务，执行各种监视、告警、报告功能。</p>
<p><strong>数据库</strong>：存储配置和监控信息。通常，多个逻辑数据库在一个或多个数据库服务器上运行。例如CMS和监控服务使用不同的逻辑数据库。</p>
<p><strong>Cloudera仓库</strong>：CM提供的用于软件分发的仓库。</p>
<p><strong>客户端</strong>：与服务器交互的借口，包括</p>
<p>管理控制台，管理员使用该基于web的界面以管理集群和CM。</p>
<p>API，开发者可使用API创建自定义的CM应用。</p>
<h3 id="心跳"><a href="#心跳" class="headerlink" title="心跳"></a>心跳</h3><p>心跳是CM的主要通信机制。默认情况下，代理每15秒发送心跳给CMS。然而为了减少用户等待时间，当状态发生变化时，频率会增加。</p>
<p>心跳的交换过程中，代理通知CMS其自身的活性。反过来，CMS使用该消息对应执行的操作进行响应。代理和CMS两者最终会达成一致，例如当 启动一个服务时，代理会尝试启动相关的进程;如果一个进程启动失败， CMS会将启动命令标记为失败。</p>
<h3 id="CM-功能"><a href="#CM-功能" class="headerlink" title="CM 功能"></a>CM 功能</h3><p>状态管理：</p>
<p>CMS维护了集群的各种状态。状态可分为两类：模块和运行时，两者都存储于CMS的数据库中。</p>
<p>模块中包含集群、主机、服务、角色、配置。运行时包含进程、命令。</p>
<h4 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h4><p>CM在多个层面定义了配置，如：</p>
<ul>
<li>服务层面，可定义整个服务实例层面的配置，如HDFS服务的默认副本因子。</li>
<li>角色组层面，可定义某个角色组的配置，如DataNode的处理线程数量，可根据DataNodes的不同分组进行不同的配置。</li>
<li>角色层面，可覆盖从角色组层面继承的配置。这种配置需要谨慎使用，因为会造成角色组中的配置分歧。如因为排错需求临时启用某个角色实例的DEBUG日志。</li>
<li>主机层面，根据监控、软件管理、资源管理的不同有不同的配置。</li>
<li>CM自身也有很多与管理操作相关的配置</li>
</ul>
<h4 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h4><ul>
<li>非CM管理的集群使用脚本进行角色进程的启动，但在CM管理的集群中这类脚本不起作用。</li>
<li>CM管理的集群中，只能使用CM进行角色进程的启停。CM使用开源的进程管理工具名为supervisord，其会启动进程、重定向日志、通知进程失 败、为进程设置正确的用户ID等等。CM支持自动重启一个崩溃的进程。 如果一个进程在启动后频繁崩溃，还会被打上非健康标记。</li>
<li>停止CMS和CM代理不会使正在运行的进程被中止。</li>
</ul>
<h4 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h4><ul>
<li>CM支持两种软件分发格式:packages和parcels。</li>
<li>package是一种二进制分发格式，包含编译的代码和元数据如包 述、版本、依赖项。包管理系统评估此元数据以允许包搜索、执行升级、确保包的所有依赖关系得到满足。CM使用本地操作系统支持的包管理程序。</li>
<li>parcel也是一种二进制分发格式，包含CM需要使用的附加元数据。其与package的区别有:可安装同一个parcel的多个版本，并激活其中一个; parcel可安装到任何路径;通过parcel安装，CM会自动下载并激活和每 个节点操作系统版本匹配的parcel包，解决某些操作系统版本不一致问 题。</li>
</ul>
<h4 id="主机管理"><a href="#主机管理" class="headerlink" title="主机管理"></a>主机管理</h4><ul>
<li>CM 供了多种功能以管理Hadoop集群的主机。第一次运行CM管理员控制台时，可搜索主机并添加到集群，一旦选中了主机就可以为其分配CDH 角色。CM会在主机上自动部署作为集群托管节点的所有软件:JDK，CM 代理，CDH，Impala，Solr等等。</li>
<li>服务部署并运行后，管理员控制台中的“Hosts”区域显示集群中托管 主机的总体状态。 供的信息包括主机上的CDH版本、主机所属的集群、 运行在主机上的角色的数量。Cloudera管理服务中的主机监控角色执行 健康检查并收集主机的统计信息，以允许你监控主机的健康和性能。</li>
</ul>
<h4 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h4><p>CM允许使用两种资源管理方式:</p>
<ul>
<li>静态资源池:使用Linux cgroups在多个服务间静态地进行资源隔离，如 HBase、Impala、YARN分别使用一定百分比的资源。静态资源池默认不启 用。</li>
<li>动态资源池:用于某些服务内部的资源管理，如YARN的各种资源调度器; Impala也可对不同池中的查询动态分配资源。</li>
</ul>
<h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><ul>
<li>访问CM通过用户账户进行控制。用户账户标识如何对用户进行身份验证，并确定授予用户的权限。</li>
<li>CM 供了多种用户认证机制。可以配置CM使用CM数据库认证用户，或使用某种外部认证服务。外部认证服务可以是LDAP服务器，或者指定的其 他服务。CM还支持使用安全断言标记语言(SAML)来实现单点登录。</li>
</ul>
<h4 id="安全管理"><a href="#安全管理" class="headerlink" title="安全管理"></a>安全管理</h4><ul>
<li>认证:认证是指用户或服务证明其有访问某种系统资源的权限。Cloudera集群支持操作系统账号认证、LDAP、Kerberos等认证方式。LDAP和Kerberos并不是互斥的，很多时候可以一起使用。</li>
<li>授权:授权关注谁可以存取或控制指定的资源或服务。CDH目前支持以 下几种权限控制:传统的POSIX形式的目录和文件权限控制;HDFS扩展 的ACL细粒度权限控制;HBase可对用户和组设置各种操作的ACL;使用Apache Sentry进行基于角色的权限控制。</li>
<li>加密:集群不同层面存储和传输的数据支持不同的加密方式。</li>
</ul>
<h4 id="管理服务"><a href="#管理服务" class="headerlink" title="管理服务"></a>管理服务</h4><p>Cloudera Management Service实现了多种管理特性，包括活动监控、主机监控、服务监控、事件服务、告警发布、报表管理等。</p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>CDH</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins+Git+Maven持续集成</title>
    <url>/2019/03/24/Jenkins-Git-Maven%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h4 id="什么叫可持续集成"><a href="#什么叫可持续集成" class="headerlink" title="什么叫可持续集成"></a>什么叫可持续集成</h4><p> 持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。</p>
<h4 id="jenkins简介"><a href="#jenkins简介" class="headerlink" title="jenkins简介"></a>jenkins简介</h4><p> Jenkins是一个开源软件项目，是基于Java开发的一种<a href="https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/6250744">持续集成</a>工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</p>
<h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><h5 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h5><span id="more"></span>

<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">[root<span class="title">@VM_0_15_centos</span> ~]# cat /etc/centos-<span class="keyword">release</span></span><br><span class="line">CentOS Linux <span class="keyword">release</span> <span class="number">7.5</span>.<span class="number">1804</span> (Core)</span><br></pre></td></tr></table></figure>

<h5 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入/usr/local/src目录</span></span><br><span class="line">cd <span class="regexp">/usr/</span>local/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传jdk文件并解压</span></span><br><span class="line">tar zxvf jdk-<span class="number">8</span>u201-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝</span></span><br><span class="line">cp -R jdk1.<span class="number">8.0</span>_201<span class="regexp">/   /u</span>sr<span class="regexp">/local/</span>jdk1.<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量 </span></span><br><span class="line">vim <span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="comment">#并在profile最后添加以下内容</span></span><br><span class="line">JAVA_HOME=<span class="regexp">/usr/</span>local/jdk1.<span class="number">8</span></span><br><span class="line">CLASSPATH=.:<span class="variable">$JAVA_HOME</span><span class="regexp">/lib/</span>tools.jar:<span class="variable">$JAVA_HOME</span><span class="regexp">/lib/</span>dt.jar</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span><span class="regexp">/bin:$HOME/</span>bin:<span class="variable">$HOME</span><span class="regexp">/.local/</span>bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化环境变量</span></span><br><span class="line">source <span class="regexp">/etc/</span>profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看java 版本</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line">java version <span class="string">&quot;1.8.0_201&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">1.8</span>.<span class="number">0</span>_201-b09)</span><br><span class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">25.201</span>-b09, mixed mode)</span><br></pre></td></tr></table></figure>

<h5 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h5><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">yum  -y install git</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看git 版本</span></span><br><span class="line">git <span class="comment">--version</span></span><br></pre></td></tr></table></figure>

<h5 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven"></a>安装maven</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入/usr/local/src目录</span></span><br><span class="line">cd <span class="regexp">/usr/</span>local/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传jdk文件并解压</span></span><br><span class="line">tar zxvf apache-maven-<span class="number">3.6</span>.<span class="number">0</span>-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝</span></span><br><span class="line">cp -R apache-maven-<span class="number">3.6</span>.<span class="number">0</span><span class="regexp">/   /u</span>sr<span class="regexp">/local/m</span>aven</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量 </span></span><br><span class="line">vim <span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="comment">#并在profile最后添加以下内容</span></span><br><span class="line">MAVEN_HOME=<span class="regexp">/usr/</span>local/maven</span><br><span class="line">PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;MAVEN_HOME&#125;</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化环境变量</span></span><br><span class="line">source <span class="regexp">/etc/</span>profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看maven版本</span></span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure>

<h5 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h5><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入/usr/local/src目录</span></span><br><span class="line"><span class="attribute">cd</span> /usr/local/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传jdk文件并解压</span></span><br><span class="line"><span class="attribute">tar</span> zxvf apache-tomcat-<span class="number">8</span>.<span class="number">5</span>.<span class="number">39</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝</span></span><br><span class="line"><span class="attribute">cp</span> -R apache-tomcat-<span class="number">8</span>.<span class="number">5</span>.<span class="number">39</span>/   /usr/local/tomcat</span><br></pre></td></tr></table></figure>

<h5 id="添加tomcat为服务"><a href="#添加tomcat为服务" class="headerlink" title="添加tomcat为服务"></a>添加tomcat为服务</h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新建tomcat启动文件</span></span><br><span class="line">vim <span class="regexp">/etc/i</span>nit.d/tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># description: Tomcat8 Start Stop Restart</span></span><br><span class="line"><span class="comment"># processname: tomcat8</span></span><br><span class="line"><span class="comment"># chkconfig: 234 20 80</span></span><br><span class="line"></span><br><span class="line">CATALINA_HOME=<span class="regexp">/usr/</span>local/tomcat</span><br><span class="line">export JAVA_HOME=<span class="regexp">/usr/</span>local/jdk1.<span class="number">8</span></span><br><span class="line"></span><br><span class="line">case <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">                sh <span class="variable">$CATALINA_HOME</span><span class="regexp">/bin/</span>startup.sh</span><br><span class="line">                ;;</span><br><span class="line">        stop)</span><br><span class="line">                sh <span class="variable">$CATALINA_HOME</span><span class="regexp">/bin/</span>shutdown.sh</span><br><span class="line">                ;;</span><br><span class="line">        restart)</span><br><span class="line">                sh <span class="variable">$CATALINA_HOME</span><span class="regexp">/bin/</span>shutdown.sh</span><br><span class="line">                sh <span class="variable">$CATALINA_HOME</span><span class="regexp">/bin/</span>startup.sh</span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">                echo <span class="string">&#x27;please use : tomcat &#123;start | stop | restart&#125;&#x27;</span></span><br><span class="line">        ;;  </span><br><span class="line">esac        </span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#添加执行权限</span></span><br><span class="line">chmod <span class="number">755</span> <span class="regexp">/etc/i</span>nit.d/tomcat</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加为系统服务</span></span><br><span class="line">chkconfig --add tomcat</span><br><span class="line"><span class="comment">#现在可以用service tomcat stop |start|restart 来管理tomcat了</span></span><br></pre></td></tr></table></figure>

<h5 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h5><p>因机器内存不足的原因，这里jenkins 使用rpm包安装</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入到src目录并上传rpm包</span></span><br><span class="line"><span class="attribute">cd</span> /usr/local/src</span><br><span class="line"><span class="comment">#开始安装</span></span><br><span class="line"><span class="attribute">rpm</span> -ih jenkins-<span class="number">2</span>.<span class="number">168</span>-<span class="number">1</span>.<span class="number">1</span>.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>因jenkins 默认使用8080端口，和tomcat占用的端口有冲突，故更改一下jenkins的默认端口</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>sysconfig/jenkins</span><br></pre></td></tr></table></figure>

<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324133442.png" alt="img"></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/i</span>nit.d/jenkins</span><br></pre></td></tr></table></figure>

<p>因rpm安装的jenkins 默认的jdk与安装的jdk路径不一样，会报错，启动不起来，故需要更改一下配置</p>
<p><img src="https://img.ssmwolf.com/YSH11DRH%7DQT0I1_0%25NTKYTY.png" alt="img"></p>
<h4 id="jenkins初始化"><a href="#jenkins初始化" class="headerlink" title="jenkins初始化"></a>jenkins初始化</h4><p>浏览器打开你的地址 ip+端口，复制密码到输入框</p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324133843.png" alt="jenkins密码"></p>
<h4 id="jenkins插件安装"><a href="#jenkins插件安装" class="headerlink" title="jenkins插件安装"></a>jenkins插件安装</h4><p>这里选择安装推荐的默认插件</p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324134149.png" alt="img"></p>
<p>创建管理员账号</p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324134636.png" alt="img"></p>
<p>安装 maven 插件，找到 “系统管理“ - “安装插件” ，点击 “可选插件”，找到如下maven插件的版本（Maven Integration）</p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324135304.png" alt="img"></p>
<h5 id="jenkins配置"><a href="#jenkins配置" class="headerlink" title="jenkins配置"></a>jenkins配置</h5><p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324140147.png" alt="img"></p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324140326.png" alt="img"></p>
<p>配置完并保存</p>
<h4 id="jenkins创建项目"><a href="#jenkins创建项目" class="headerlink" title="jenkins创建项目"></a>jenkins创建项目</h4><p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324140603.png" alt="img"></p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324141633.png" alt="img"></p>
<p>构建完成后的shell脚本 达到自动部署的目地</p>
<p><img src="https://img.ssmwolf.com/QQ%E6%88%AA%E5%9B%BE20190324141250.png" alt="img"></p>
<h4 id="编写shell脚本"><a href="#编写shell脚本" class="headerlink" title="编写shell脚本"></a>编写shell脚本</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"><span class="comment">#设置UTF-8环境</span></span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">LANG</span>=en_US.UTF-8</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/java/jdk1.8</span><br><span class="line"><span class="attribute">TOMCAT_HOME</span>=<span class="string">&quot;/usr/local/tomcat/&quot;</span></span><br><span class="line"><span class="attribute">TOMCAT_PORT</span>=8080</span><br><span class="line"><span class="attribute">PROJECT</span>=<span class="string">&quot;trip&quot;</span></span><br><span class="line"><span class="attribute">BAK_DIR</span>=/opt/war/bak/$PROJECT/`date +%Y%m%d`</span><br><span class="line"><span class="attribute">WORK_DIR</span>=/var/lib/jenkins/workspace/trip/target</span><br><span class="line">service tomcat stop</span><br><span class="line">sleep 5</span><br><span class="line">mkdir -p <span class="string">&quot;<span class="variable">$&#123;BAK_DIR&#125;</span>&quot;</span></span><br><span class="line">mv <span class="string">&quot;<span class="variable">$&#123;TOMCAT_HOME&#125;</span>&quot;</span>/webapps/<span class="variable">$&#123;PROJECT&#125;</span>.war <span class="string">&quot;<span class="variable">$&#123;BAK_DIR&#125;</span>&quot;</span>/<span class="string">&quot;<span class="variable">$&#123;PROJECT&#125;</span>&quot;</span>_`date +%Y%m%d%H%M%S`.war</span><br><span class="line">rm -rf <span class="string">&quot;<span class="variable">$&#123;TOMCAT_HOME&#125;</span>&quot;</span>/ROOT</span><br><span class="line">rm -rf <span class="string">&quot;<span class="variable">$&#123;TOMCAT_HOME&#125;</span>&quot;</span>/webapps/trip.war</span><br><span class="line">mv <span class="string">&quot;<span class="variable">$&#123;WORK_DIR&#125;</span>&quot;</span>/trip-develop.war   <span class="string">&quot;<span class="variable">$&#123;TOMCAT_HOME&#125;</span>&quot;</span>/webapps/trip.war</span><br><span class="line">sleep 3</span><br><span class="line">service tomcat start</span><br><span class="line">echo <span class="string">&quot;tomcat 启动成功&quot;</span></span><br></pre></td></tr></table></figure>

<p>给shell脚本赋予执行权限</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">chmod 777 /<span class="keyword">shell</span>/<span class="keyword">ci</span>.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>

<h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><p>shell脚本需要申明UTF-8,否则可能自动部署的项目会有乱码问题</p>
]]></content>
      <categories>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
        <tag>持续集成</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统LVM扩容</title>
    <url>/2018/12/05/Linux%E7%B3%BB%E7%BB%9FLVM%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<p><strong>摘要</strong>：</p>
<p>前几天客户给了生产服务器，发现分区并没有要求的那么大，后来发现有硬盘没有分好区，系统lvm扩容步骤简要记录一下</p>
<h5 id="查看分区列表"><a href="#查看分区列表" class="headerlink" title="查看分区列表"></a>查看分区列表</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure>

<h5 id="fdisk创建一个-dev-vda3分区"><a href="#fdisk创建一个-dev-vda3分区" class="headerlink" title="fdisk创建一个/dev/vda3分区"></a>fdisk创建一个/dev/vda3分区</h5><span id="more"></span>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk /dev/vda3</span><br></pre></td></tr></table></figure>



<h5 id="重读分区"><a href="#重读分区" class="headerlink" title="重读分区"></a>重读分区</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">partprobe</span><br></pre></td></tr></table></figure>

<h5 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkfs -t ext4 /dev/vda3</span><br></pre></td></tr></table></figure>

<h5 id="创建一个PV物理卷"><a href="#创建一个PV物理卷" class="headerlink" title="创建一个PV物理卷"></a>创建一个PV物理卷</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/vda3</span><br></pre></td></tr></table></figure>

<h5 id="把PV物理卷加入到VG逻辑卷组里"><a href="#把PV物理卷加入到VG逻辑卷组里" class="headerlink" title="把PV物理卷加入到VG逻辑卷组里"></a>把PV物理卷加入到VG逻辑卷组里</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vgextend cl /dev/vda3</span><br></pre></td></tr></table></figure>

<h5 id="扩展LV逻辑卷的空间"><a href="#扩展LV逻辑卷的空间" class="headerlink" title="扩展LV逻辑卷的空间"></a>扩展LV逻辑卷的空间</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/mapper/cl-root</span><br></pre></td></tr></table></figure>

<h5 id="刷新分区大小"><a href="#刷新分区大小" class="headerlink" title="刷新分区大小"></a>刷新分区大小</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xfs_growfs  /dev/mapper/cl-root</span><br></pre></td></tr></table></figure>

<h5 id="查看分区"><a href="#查看分区" class="headerlink" title="查看分区"></a>查看分区</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>lvm</tag>
        <tag>扩容</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql5.7配置主从同步</title>
    <url>/2020/07/13/Mysql5-7%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<h4 id="什么是主从复制"><a href="#什么是主从复制" class="headerlink" title="什么是主从复制"></a>什么是主从复制</h4><p>简单来说，是使用两个或两个以上相同的数据库，将一个数据库当做主数据库，而另一个数据库当做从数据库。在主数据库中进行相应操作时，从数据库记录下所有主数据库的操作，使其二者一模一样。</p>
<h5 id="主从复制的优点"><a href="#主从复制的优点" class="headerlink" title="主从复制的优点"></a>主从复制的优点</h5><p>1.如果主服务器出现问题，可以快速切换到从服务器提供服务；</p>
<p>2.可以在从服务器上执行查询操作，降低主服务器的访问压力；</p>
<span id="more"></span>
<p>3.可以在从服务器上执行备份，以避免备份期间影响主服务器的服务</p>
<h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p>数据库主服务器 10.150.1.36</p>
<p>数据库从服务器 10.150.1.37</p>
<p>数据库版本：5.7.30</p>
<p>操作系统：CentOS Linux release 7.8.2003</p>
<h5 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h5><p>修改/etc/selinux/config 文件</p>
<p>将SELINUX=enforcing改为SELINUX=disabled,重启生效</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="meta"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="meta">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="meta">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="meta">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="meta"># SELINUXTYPE= can take one of three values:</span></span><br><span class="line"><span class="meta">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="meta">#     minimum - Modification of targeted policy. Only selected processes are protected. </span></span><br><span class="line"><span class="meta">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>

<h5 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h5><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>

<h5 id="卸载系统自带Mariadb"><a href="#卸载系统自带Mariadb" class="headerlink" title="卸载系统自带Mariadb"></a>卸载系统自带Mariadb</h5><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]rpm -qa | <span class="keyword">grep</span> mariadb <span class="comment">#查看centos 默认安装的mariadb</span></span><br><span class="line">mariadb-libs-<span class="number">5.5</span>.<span class="number">65</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">[root@localhost ~] rpm -e --nodeps mariadb-libs-<span class="number">5.5</span>.<span class="number">65</span>-<span class="number">1</span>.el7.x86_64 <span class="comment"># 强制卸载mariadb</span></span><br><span class="line">[root@localhost ~] rm -rf /etc/my.cnf  <span class="comment">#删除mariadb默认的配置文件</span></span><br></pre></td></tr></table></figure>

<h5 id="下载mysql"><a href="#下载mysql" class="headerlink" title="下载mysql"></a>下载mysql</h5><p>下载mysql二进制压缩包并上传到服务器</p>
<p>进入<a href="https://dev.mysql.com/downloads/mysql/5.7.html">https://dev.mysql.com/downloads/mysql/5.7.html</a></p>
<p><img src="https://images.sswolf.cn/QQ%E6%88%AA%E5%9B%BE20200518103430.png" alt="img"></p>
<h5 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h5><h6 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h6><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入mysql上传目录</span></span><br><span class="line"><span class="attribute">cd</span> /usr/local/src</span><br><span class="line"><span class="comment">#解压文件</span></span><br><span class="line"><span class="attribute">tar</span> zxvf mysql-<span class="number">5</span>.<span class="number">7</span>.<span class="number">30</span>-linux-glibc<span class="number">2</span>.<span class="number">12</span>-x<span class="number">86</span>_<span class="number">64</span>.tar.gz</span><br><span class="line"><span class="comment">#拷贝至安装路径</span></span><br><span class="line"><span class="attribute">cp</span> -R mysql-<span class="number">5</span>.<span class="number">7</span>.<span class="number">30</span>-linux-glibc<span class="number">2</span>.<span class="number">12</span>-x<span class="number">86</span>_<span class="number">64</span>   /usr/local/mysql</span><br></pre></td></tr></table></figure>

<h6 id="添加mysql用户和用户组"><a href="#添加mysql用户和用户组" class="headerlink" title="添加mysql用户和用户组"></a>添加mysql用户和用户组</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd mysql -g mysql -M -s <span class="regexp">/sbin/</span>nologin</span><br></pre></td></tr></table></figure>

<h6 id="给mysql用户授权mysql-文件夹"><a href="#给mysql用户授权mysql-文件夹" class="headerlink" title="给mysql用户授权mysql 文件夹"></a>给mysql用户授权mysql 文件夹</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">chown -R mysql:mysql <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span></span><br></pre></td></tr></table></figure>

<h6 id="拷贝启动文件"><a href="#拷贝启动文件" class="headerlink" title="拷贝启动文件"></a>拷贝启动文件</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>support-files<span class="regexp">/mysql.server /</span>etc<span class="regexp">/init.d/</span></span><br></pre></td></tr></table></figure>

<h6 id="数据库初始化"><a href="#数据库初始化" class="headerlink" title="数据库初始化"></a>数据库初始化</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建数据库文件夹</span></span><br><span class="line">mkdir -p <span class="regexp">/data/my</span>sql/data</span><br><span class="line">mkdir -p <span class="regexp">/data/my</span>sql/logs</span><br><span class="line">mkdir -p <span class="regexp">/data/my</span>sql/binlog</span><br><span class="line">chown mysql:mysql -R <span class="regexp">/data/my</span>sql/</span><br><span class="line"><span class="comment">#创建主库my.cnf</span></span><br><span class="line">vim <span class="regexp">/etc/my</span>.cf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=<span class="number">0.0</span>.<span class="number">0.0</span> <span class="comment">#绑定的IP</span></span><br><span class="line">port=<span class="number">3306</span> <span class="comment">#mysql占用的端口</span></span><br><span class="line">basedir=<span class="regexp">/usr/</span>local/mysql <span class="comment">#mysql安装目录</span></span><br><span class="line">datadir=<span class="regexp">/data/my</span>sql/data <span class="comment">#mysql数据目录</span></span><br><span class="line">socket=<span class="regexp">/tmp/my</span>sql.sock   <span class="comment">#socket位置</span></span><br><span class="line">log-error=<span class="regexp">/data/my</span>sql<span class="regexp">/logs/my</span>sql.err <span class="comment">#error日志路径</span></span><br><span class="line">pid-file=mysql.pid  <span class="comment">#进程id文件</span></span><br><span class="line"><span class="comment">#character config</span></span><br><span class="line">character_set_server=utf8mb4 <span class="comment">#编码格式</span></span><br><span class="line">symbolic-links=<span class="number">0</span> <span class="comment">#关闭符号链接</span></span><br><span class="line">explicit_defaults_for_timestamp=true</span><br><span class="line">lower_case_table_names=<span class="number">1</span> <span class="comment">#不区分大小写</span></span><br><span class="line">log_bin =<span class="regexp">/data/my</span>sql<span class="regexp">/binlog/my</span>sql-bin <span class="comment">#logbin文件路径</span></span><br><span class="line">binlog_format=row <span class="comment">#binlog</span></span><br><span class="line">max_connections =<span class="number">1024</span> <span class="comment">#mysql最大连接数</span></span><br><span class="line">server-id=<span class="number">1</span> <span class="comment">#数据库服务器ID，配置主从或者集群时 server id必须唯一</span></span><br><span class="line">sync_binlog=<span class="number">1</span> <span class="comment">#二进制日志文件刷新到磁盘上</span></span><br><span class="line">expire_logs_days = <span class="number">30</span> <span class="comment">#binlog日志 超过30天的自动清理</span></span><br><span class="line">slow_query_log = <span class="number">1</span> <span class="comment">#启用慢查询日志</span></span><br><span class="line">long_query_time = <span class="number">2</span> <span class="comment">#慢查询时间</span></span><br><span class="line">slow_query_log_file=<span class="regexp">/data/my</span>sql<span class="regexp">/logs/</span>slow.log <span class="comment">#慢查询日志路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用-initialize会生成随机密码，使用-initialize-insecure生成空密码，这里选择生成空密码。</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>bin/mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></table></figure>

<h6 id="添加至环境变量"><a href="#添加至环境变量" class="headerlink" title="添加至环境变量"></a>添加至环境变量</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使其永久生效，把安装目录添加至环境变量</span></span><br><span class="line">vim <span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="comment">#文件最后一行添加进去</span></span><br><span class="line">export PATH=<span class="variable">$PATH</span>:<span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>bin</span><br><span class="line"><span class="comment">#马上生效</span></span><br><span class="line">source <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure>

<p>5.从数据库安装</p>
<p>安装过程略，与主服务器安装一样，但server-id必须唯一</p>
<h5 id="主从配置"><a href="#主从配置" class="headerlink" title="主从配置"></a>主从配置</h5><h6 id="分别启动主从数据库服务器"><a href="#分别启动主从数据库服务器" class="headerlink" title="分别启动主从数据库服务器"></a>分别启动主从数据库服务器</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>ni.d/mysql.server start</span><br></pre></td></tr></table></figure>

<h6 id="主服务器创建主从同步账号"><a href="#主服务器创建主从同步账号" class="headerlink" title="主服务器创建主从同步账号"></a>主服务器创建主从同步账号</h6><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;repl&#x27;</span>; #创建repl账号并设置密码为repl</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> SLAVE <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span>; #赋予repl账号复制权限</span><br><span class="line">FLUSH <span class="keyword">PRIVILEGES</span>; #刷新权限</span><br><span class="line">mysql&gt; <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;repl&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> SLAVE <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH <span class="keyword">PRIVILEGES</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<h6 id="查看主库position和File"><a href="#查看主库position和File" class="headerlink" title="查看主库position和File"></a>查看主库position和File</h6><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">show master status;</span><br><span class="line">[root@localhost src] mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.30-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="emphasis">&#x27;help;&#x27;</span> or <span class="emphasis">&#x27;\h&#x27;</span> for help. Type <span class="emphasis">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000002 |     1162 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>5.4从库配置主库信息并开启同步</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line"><span class="attribute">MASTER_HOST</span>=<span class="string">&#x27;10.150.1.36&#x27;</span>,</span><br><span class="line"><span class="attribute">MASTER_USER</span>=<span class="string">&#x27;repl&#x27;</span>,</span><br><span class="line"><span class="attribute">MASTER_PASSWORD</span>=<span class="string">&#x27;repl&#x27;</span>,</span><br><span class="line"><span class="attribute">MASTER_PORT</span>=3306,</span><br><span class="line"><span class="attribute">MASTER_LOG_FILE</span>=<span class="string">&#x27;mysql-bin.000002&#x27;</span>,</span><br><span class="line"><span class="attribute">MASTER_LOG_POS</span>=1162;</span><br><span class="line">mysql&gt; CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">    -&gt; <span class="attribute">MASTER_HOST</span>=<span class="string">&#x27;10.150.1.36&#x27;</span>,</span><br><span class="line">    -&gt; <span class="attribute">MASTER_USER</span>=<span class="string">&#x27;repl&#x27;</span>,</span><br><span class="line">    -&gt; <span class="attribute">MASTER_PASSWORD</span>=<span class="string">&#x27;repl&#x27;</span>,</span><br><span class="line">    -&gt; <span class="attribute">MASTER_PORT</span>=3306,</span><br><span class="line">    -&gt; <span class="attribute">MASTER_LOG_FILE</span>=<span class="string">&#x27;mysql-bin.000002&#x27;</span>,</span><br><span class="line">    -&gt; <span class="attribute">MASTER_LOG_POS</span>=1162;</span><br><span class="line">Query OK, 0 rows affected, 2 warnings (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<h6 id="主从同步状态查看"><a href="#主从同步状态查看" class="headerlink" title="主从同步状态查看"></a>主从同步状态查看</h6><p>登录从服务器</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1</span><span class="string">.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line">               <span class="attr">Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line">                  <span class="attr">Master_Host:</span> <span class="number">10.150</span><span class="number">.1</span><span class="number">.36</span></span><br><span class="line">                  <span class="attr">Master_User:</span> <span class="string">repl</span></span><br><span class="line">                  <span class="attr">Master_Port:</span> <span class="number">3306</span></span><br><span class="line">                <span class="attr">Connect_Retry:</span> <span class="number">60</span></span><br><span class="line">              <span class="attr">Master_Log_File:</span> <span class="string">mysql-bin.000002</span></span><br><span class="line">          <span class="attr">Read_Master_Log_Pos:</span> <span class="number">1162</span></span><br><span class="line">               <span class="attr">Relay_Log_File:</span> <span class="string">localhost-relay-bin.000002</span></span><br><span class="line">                <span class="attr">Relay_Log_Pos:</span> <span class="number">320</span></span><br><span class="line">        <span class="attr">Relay_Master_Log_File:</span> <span class="string">mysql-bin.000002</span></span><br><span class="line">             <span class="attr">Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line">            <span class="attr">Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line">              <span class="attr">Replicate_Do_DB:</span> </span><br><span class="line">          <span class="attr">Replicate_Ignore_DB:</span> </span><br><span class="line">           <span class="attr">Replicate_Do_Table:</span> </span><br><span class="line">       <span class="attr">Replicate_Ignore_Table:</span> </span><br><span class="line">      <span class="attr">Replicate_Wild_Do_Table:</span> </span><br><span class="line">  <span class="attr">Replicate_Wild_Ignore_Table:</span> </span><br><span class="line">                   <span class="attr">Last_Errno:</span> <span class="number">0</span></span><br><span class="line">                   <span class="attr">Last_Error:</span> </span><br><span class="line">                 <span class="attr">Skip_Counter:</span> <span class="number">0</span></span><br><span class="line">          <span class="attr">Exec_Master_Log_Pos:</span> <span class="number">1162</span></span><br><span class="line">              <span class="attr">Relay_Log_Space:</span> <span class="number">531</span></span><br><span class="line">              <span class="attr">Until_Condition:</span> <span class="string">None</span></span><br><span class="line">               <span class="attr">Until_Log_File:</span> </span><br><span class="line">                <span class="attr">Until_Log_Pos:</span> <span class="number">0</span></span><br><span class="line">           <span class="attr">Master_SSL_Allowed:</span> <span class="literal">No</span></span><br><span class="line">           <span class="attr">Master_SSL_CA_File:</span> </span><br><span class="line">           <span class="attr">Master_SSL_CA_Path:</span> </span><br><span class="line">              <span class="attr">Master_SSL_Cert:</span> </span><br><span class="line">            <span class="attr">Master_SSL_Cipher:</span> </span><br><span class="line">               <span class="attr">Master_SSL_Key:</span> </span><br><span class="line">        <span class="attr">Seconds_Behind_Master:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">Master_SSL_Verify_Server_Cert:</span> <span class="literal">No</span></span><br><span class="line">                <span class="attr">Last_IO_Errno:</span> <span class="number">0</span></span><br><span class="line">                <span class="attr">Last_IO_Error:</span> </span><br><span class="line">               <span class="attr">Last_SQL_Errno:</span> <span class="number">0</span></span><br><span class="line">               <span class="attr">Last_SQL_Error:</span> </span><br><span class="line">  <span class="attr">Replicate_Ignore_Server_Ids:</span> </span><br><span class="line">             <span class="attr">Master_Server_Id:</span> <span class="number">1</span></span><br><span class="line">                  <span class="attr">Master_UUID:</span> <span class="string">d784f10a-bd86-11ea-a579-00505693b4d1</span></span><br><span class="line">             <span class="attr">Master_Info_File:</span> <span class="string">/data/mysql/data/master.info</span></span><br><span class="line">                    <span class="attr">SQL_Delay:</span> <span class="number">0</span></span><br><span class="line">          <span class="attr">SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line">      <span class="attr">Slave_SQL_Running_State:</span> <span class="string">Slave</span> <span class="string">has</span> <span class="string">read</span> <span class="string">all</span> <span class="string">relay</span> <span class="string">log;</span> <span class="string">waiting</span> <span class="string">for</span> <span class="string">more</span> <span class="string">updates</span></span><br><span class="line">           <span class="attr">Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line">                  <span class="attr">Master_Bind:</span> </span><br><span class="line">      <span class="attr">Last_IO_Error_Timestamp:</span> </span><br><span class="line">     <span class="attr">Last_SQL_Error_Timestamp:</span> </span><br><span class="line">               <span class="attr">Master_SSL_Crl:</span> </span><br><span class="line">           <span class="attr">Master_SSL_Crlpath:</span> </span><br><span class="line">           <span class="attr">Retrieved_Gtid_Set:</span> </span><br><span class="line">            <span class="attr">Executed_Gtid_Set:</span> </span><br><span class="line">                <span class="attr">Auto_Position:</span> <span class="number">0</span></span><br><span class="line">         <span class="attr">Replicate_Rewrite_DB:</span> </span><br><span class="line">                 <span class="attr">Channel_Name:</span> </span><br><span class="line">           <span class="attr">Master_TLS_Version:</span> </span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span></span><br></pre></td></tr></table></figure>

<p>Slave_IO_Running和 Slave_SQL_Running都为Yes，即说明同步状态正常</p>
<h6 id="测试同步效果"><a href="#测试同步效果" class="headerlink" title="测试同步效果"></a>测试同步效果</h6><p>主库</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE DATABASE test;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>从库</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<h4 id="主从配置常见错误及解决思路"><a href="#主从配置常见错误及解决思路" class="headerlink" title="主从配置常见错误及解决思路"></a>主从配置常见错误及解决思路</h4><h5 id="Slave-IO-Running-Connecting"><a href="#Slave-IO-Running-Connecting" class="headerlink" title="Slave_IO_Running: Connecting"></a>Slave_IO_Running: Connecting</h5><p>网络不通</p>
<p>密码不对</p>
<p>pos不正确</p>
<p>ID相同</p>
<p>防火墙未关闭或者端口未开放</p>
<h5 id="Slave-SQL-Running-No"><a href="#Slave-SQL-Running-No" class="headerlink" title="Slave_SQL_Running:No"></a>Slave_SQL_Running:No</h5><p>为No说明数据库不统一，或者无法复制数据库，手动重新配置主从即可，具体查看Last_IO_Error_Timestamp:和Last_SQL_Error_Timestamp的日志报错</p>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx配置https</title>
    <url>/2018/09/24/Nginx%E9%85%8D%E7%BD%AEhttps/</url>
    <content><![CDATA[<h5 id="Https简介"><a href="#Https简介" class="headerlink" title="Https简介"></a>Https简介</h5><p>HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的<a href="https://baike.baidu.com/item/HTTP">HTTP</a>通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。 它是一个URI scheme（抽象标识符体系），句法类同<a href="https://baike.baidu.com/item/http">http</a>:体系。用于安全的HTTP数据传输。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认<a href="https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3/103505">端口</a>及一个加密/身份验证层（在HTTP与TCP之间）。这个系统的最初研发由<a href="https://baike.baidu.com/item/%E7%BD%91%E6%99%AF">网景</a>公司(Netscape)进行，并内置于其浏览器Netscape Navigator中，提供了身份验证与加密<a href="https://baike.baidu.com/item/%E9%80%9A%E8%AE%AF/396194">通讯</a>方法。</p>
<h5 id="购买或申请证书"><a href="#购买或申请证书" class="headerlink" title="购买或申请证书"></a>购买或申请证书</h5><p>有免费1年的单域名证书 也有多域名的，自己去云服务商购买</p>
<p>把申请完的证书下载，然后传到对应服务器的任意位置，建议在nginx的安装目录下，新建一个文件夹 ,记录下文件路径。</p>
<span id="more"></span>
<h5 id="Nginx-https配置"><a href="#Nginx-https配置" class="headerlink" title="Nginx https配置"></a>Nginx https配置</h5><p>找到对应的nginx 站点配置文件（我这里为单独的虚拟主机站点）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name   sswolf.cn;</span><br><span class="line">        root   /www/sswolf;</span><br><span class="line">       index  test.html index.php index.html index.htm;</span><br><span class="line">        charset      utf-8;</span><br><span class="line">       access_log  /data/logs/gwaccess.log main;</span><br><span class="line">       error_log   /data/logs/gwerror.log error;</span><br></pre></td></tr></table></figure>

<p>添加一段nginx配置https的文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name   sswolf.cn;</span><br><span class="line">        charset      utf-8;</span><br><span class="line">       access_log  /data/logs/gwaccess.log main;</span><br><span class="line">       error_log   /data/logs/gwerror.log error;</span><br><span class="line">       rewrite ^/(.*) https://heibai.site/$1 permanent;</span><br><span class="line">      &#125; #80端口转发到443，访问网站直接跳转到https</span><br><span class="line">     </span><br><span class="line">server &#123;</span><br><span class="line">   listen       443;#端口</span><br><span class="line">    server_name sswolf.cn;#域名</span><br><span class="line">    ssl on;#开启ssl</span><br><span class="line">    root   /www/mx_admin;#站点根目录</span><br><span class="line">    index  test.html index.php index.html index.htm;</span><br><span class="line">    ssl_certificate   /data/ssl/215009961500297.pem;</span><br><span class="line">    ssl_certificate_key /data/ssl/215009961500297.key;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br></pre></td></tr></table></figure>

<p>修改完成，检查nginx语法是否有问题用</p>
<p>/usr/local/nginx/sbin/nginx -t</p>
<h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>1.防火墙443端口和80端口一定要打开</p>
<p>2.配置443端口 要把80端口的网站根目录注释掉，不然配置好了就是nginx默认页面</p>
<p>3.Nginx需要开启ssl模块</p>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx之负载均衡</title>
    <url>/2018/12/31/Nginx%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
    <content><![CDATA[<h5 id="概要："><a href="#概要：" class="headerlink" title="概要："></a>概要：</h5><p> 随着公司项目越来越大，流量也跟着越来越大，为了避免发生单点故障和系统的高性能，越来越多的网站架构都使用了负载均衡技术，这里简单记录一下Nginx负载均衡的配置方式。</p>
<h5 id="什么是负载均衡"><a href="#什么是负载均衡" class="headerlink" title="什么是负载均衡"></a>什么是负载均衡</h5><p>负载均衡是由多台服务器以对称的方式组成一个服务器集合，每台服务器都具有等价的地位，都可以单独对外提供服务而无须其他服务器的辅助。通过某种负载分担技术，将外部发送来的请求均匀分配到对称结构中的某一台服务器上，而接收到请求的服务器独立地回应客户的请求。均衡负载能够平均分配客户请求到服务器列阵，籍此提供快速获取重要数据，解决大量并发访问服务问题。这种<a href="https://baike.baidu.com/item/%E7%BE%A4%E9%9B%86%E6%8A%80%E6%9C%AF">群集技术</a>可以用最少的投资获得接近于大型主机的性能。</p>
<span id="more"></span>
<h5 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h5><figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">user  www<span class="comment">; #使用www用户</span></span><br><span class="line">worker_processes  <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">error_log  logs/<span class="keyword">error</span>.log;</span><br><span class="line">error_log  logs/<span class="keyword">error</span>.log  notice;</span><br><span class="line">error_log  logs/<span class="keyword">error</span>.log  <span class="keyword">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">http</span> &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line"><span class="comment">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line"><span class="comment">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">   # access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line"><span class="comment">    #tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">    #gzip  on;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">    #负载均衡池，使用ip_hash保持会话的一致性</span></span><br><span class="line">     upstream jar_pool&#123;</span><br><span class="line">         ip_hash;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.11</span><span class="number">.9</span>:<span class="number">8080</span>;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.11</span><span class="number">.10</span>:<span class="number">8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">    #监听本地80端口</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line"><span class="comment">        #charset koi8-r;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        #access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        #location / &#123;</span></span><br><span class="line"><span class="comment">        #    root   html;</span></span><br><span class="line"><span class="comment">        #    index  index.html index.htm;</span></span><br><span class="line"><span class="comment">        # &#125;</span></span><br><span class="line"><span class="comment">      #把所有转发到后端的负载均衡池</span></span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_pass <span class="keyword">http</span>://jar_pool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">        #error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        # redirect server error pages to the static page /50x.html</span></span><br><span class="line"><span class="comment">        #</span></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line"><span class="comment">       # location = /50x.html &#123;</span></span><br><span class="line"><span class="comment">       #     root   html;</span></span><br><span class="line"><span class="comment">       # &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line"><span class="comment">        #</span></span><br><span class="line"><span class="comment">        #location ~ \.php$ &#123;</span></span><br><span class="line"><span class="comment">        #    proxy_pass   http://127.0.0.1;</span></span><br><span class="line"><span class="comment">        #&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line"><span class="comment">        #</span></span><br><span class="line"><span class="comment">        #location ~ \.php$ &#123;</span></span><br><span class="line"><span class="comment">        #    root           html;</span></span><br><span class="line"><span class="comment">        #    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line"><span class="comment">        #    fastcgi_index  index.php;</span></span><br><span class="line"><span class="comment">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line"><span class="comment">        #    include        fastcgi_params;</span></span><br><span class="line"><span class="comment">        #&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">        # deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line"><span class="comment">        # concurs with nginx&#x27;s one</span></span><br><span class="line"><span class="comment">        #</span></span><br><span class="line"><span class="comment">        #location ~ /\.ht &#123;</span></span><br><span class="line"><span class="comment">        #    deny  all;</span></span><br><span class="line"><span class="comment">        #&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">    # another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line"><span class="comment">    #</span></span><br><span class="line"><span class="comment">    #server &#123;</span></span><br><span class="line"><span class="comment">    #    listen       8000;</span></span><br><span class="line"><span class="comment">    #    listen       somename:8080;</span></span><br><span class="line"><span class="comment">    #    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #    location / &#123;</span></span><br><span class="line"><span class="comment">    #        root   html;</span></span><br><span class="line"><span class="comment">    #        index  index.html index.htm;</span></span><br><span class="line"><span class="comment">    #    &#125;</span></span><br><span class="line"><span class="comment">    #&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">    # HTTPS server</span></span><br><span class="line"><span class="comment">    #</span></span><br><span class="line"><span class="comment">    #server &#123;</span></span><br><span class="line"><span class="comment">    #    listen       443 ssl;</span></span><br><span class="line"><span class="comment">    #    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #    ssl_certificate      cert.pem;</span></span><br><span class="line"><span class="comment">    #    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line"><span class="comment">    #    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line"><span class="comment">    #    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">    #    location / &#123;</span></span><br><span class="line"><span class="comment">    #        root   html;</span></span><br><span class="line"><span class="comment">    #        index  index.html index.htm;</span></span><br><span class="line"><span class="comment">    #    &#125;</span></span><br><span class="line"><span class="comment">    #&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Vmware开启嵌套虚拟化</title>
    <url>/2020/07/04/Vmware%E5%BC%80%E5%90%AF%E5%B5%8C%E5%A5%97%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
    <content><![CDATA[<p>Esxi主机开启ssh，修改 /etc/vmware/config 配置文件，在配置文件后面加入如下配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vhv.enable = &quot;TRUE&quot;</span><br></pre></td></tr></table></figure>

<p>然后重启ESXI主机</p>
]]></content>
      <categories>
        <category>Vmware</category>
      </categories>
      <tags>
        <tag>虚拟化</tag>
        <tag>Vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell脚本一键编译安装Mysql</title>
    <url>/2019/03/27/Shell%E8%84%9A%E6%9C%AC%E4%B8%80%E9%94%AE%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Mysql/</url>
    <content><![CDATA[<p>因工作量越来越大，使用shell脚本能够提高我们的工作效率并节省时间，让运维工作自动化，所以分享一下mysql一键编译安装的脚本</p>
<span id="more"></span>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/bin/bash    </span></span><br><span class="line">GROUP=mysql  </span><br><span class="line">USER=mysql  </span><br><span class="line">MYSQL_HOME=<span class="regexp">/usr/</span>local/mysql  </span><br><span class="line">MYSQL_DATA_HOME=<span class="regexp">/data/my</span>sql/data    </span><br><span class="line">D_VERSION=<span class="string">&quot;mysql-boost-5.7.30&quot;</span></span><br><span class="line">MYSQL_VERSION=<span class="string">&quot;mysql-5.7.30&quot;</span>  </span><br><span class="line">DOWNLOAD_PATH=<span class="string">&quot;/usr/local/src&quot;</span>   </span><br><span class="line">echo <span class="string">&quot;=================================start install mysql===================================&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $(id -u) != <span class="string">&quot;0&quot;</span> ];then  </span><br><span class="line">   echo <span class="string">&quot;Error: You must be root to run this script!&quot;</span>  </span><br><span class="line">   <span class="keyword">exit</span> <span class="number">1</span>  </span><br><span class="line">fi  </span><br><span class="line"><span class="keyword">if</span> [ -z $(cat <span class="regexp">/etc/g</span>roup|awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>| grep -w <span class="string">&quot;$GROUP&quot;</span>) ]  </span><br><span class="line">then  </span><br><span class="line">  groupadd  <span class="variable">$GROUP</span>  </span><br><span class="line">    <span class="keyword">if</span>(( $? == <span class="number">0</span> ))  </span><br><span class="line">      then  </span><br><span class="line">         echo <span class="string">&quot;group $GROUP add sucessfully!&quot;</span>  </span><br><span class="line">    fi     </span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">  echo <span class="string">&quot;$GROUP is exsits&quot;</span>  </span><br><span class="line">fi  </span><br><span class="line"><span class="keyword">if</span> [ -z $(cat <span class="regexp">/etc/</span>passwd|awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>| grep -w <span class="string">&quot;$USER&quot;</span>) ]  </span><br><span class="line">then  </span><br><span class="line">  adduser -g <span class="variable">$GROUP</span> <span class="variable">$USER</span>  </span><br><span class="line">     <span class="keyword">if</span> (( $? == <span class="number">0</span> ))  </span><br><span class="line">       then  </span><br><span class="line">       echo <span class="string">&quot;user $USER add sucessfully!&quot;</span>  </span><br><span class="line">     fi  </span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">  echo <span class="string">&quot;$USER is exsits&quot;</span>  </span><br><span class="line">fi   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> make gcc-c++ bison-devel  ncurses-devel  perl perl-devel wget cmake bzip2 bzip2-devel bzip2-libs python-devel openssl-devel</span><br><span class="line"><span class="keyword">do</span>    </span><br><span class="line">         yum -y install <span class="variable">$i</span>   </span><br><span class="line">done  &gt;<span class="regexp">/dev/</span>null </span><br><span class="line">echo <span class="string">&quot;==================================downloading mysql====================================&quot;</span></span><br><span class="line"> rm -rf <span class="variable">$&#123;DOWNLOAD_PATH&#125;</span>/mysql*  </span><br><span class="line"> wget https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/mysql/</span>downloads<span class="regexp">/MySQL-5.7/</span><span class="variable">$&#123;D_VERSION&#125;</span>.tar.gz -P <span class="variable">$&#123;DOWNLOAD_PATH&#125;</span>  &gt;<span class="regexp">/dev/</span>null</span><br><span class="line">     <span class="keyword">if</span>(( $? == <span class="number">0</span> ))  </span><br><span class="line">       then   </span><br><span class="line">        echo <span class="string">&quot;MySQL DownLoad sucessfully!&quot;</span>   </span><br><span class="line">       <span class="keyword">else</span>   </span><br><span class="line">        echo <span class="string">&quot;MySQL DownLoad failed!&quot;</span>  </span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span> </span><br><span class="line">     fi  </span><br><span class="line">cd <span class="variable">$&#123;DOWNLOAD_PATH&#125;</span> </span><br><span class="line">echo <span class="string">&quot;=================================unpackaging mysql=====================================&quot;</span></span><br><span class="line">tar xzvf <span class="variable">$&#123;D_VERSION&#125;</span>.tar.gz  &gt;<span class="regexp">/dev/</span>null</span><br><span class="line">cd <span class="variable">$&#123;MYSQL_VERSION&#125;</span>  </span><br><span class="line"><span class="keyword">if</span> [ -s <span class="regexp">/etc/my</span>.cnf ]; then  </span><br><span class="line">        mv <span class="regexp">/etc/my</span>.cnf <span class="regexp">/etc/my</span>.cnf.`date +%Y%m%d%H%M%S`.bak  </span><br><span class="line">fi </span><br><span class="line">cat &lt;&lt; EOF &gt;<span class="regexp">/etc/my</span>.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=<span class="regexp">/usr/</span>local/mysql</span><br><span class="line">datadir=<span class="regexp">/data/my</span>sql/data</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line">bind-address=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line">socket=<span class="regexp">/usr/</span>local<span class="regexp">/mysql/my</span>sql.sock</span><br><span class="line">lower_case_table_names=<span class="number">1</span></span><br><span class="line">slow_query_log=<span class="number">1</span></span><br><span class="line">long_query_time=<span class="number">1</span></span><br><span class="line">max_connections=<span class="number">1000</span></span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce-gtid-consistency=true</span><br><span class="line">log_error_verbosity=<span class="number">2</span></span><br><span class="line">back_log=<span class="number">200</span></span><br><span class="line">open_files_limit=<span class="number">60000</span></span><br><span class="line">table_open_cache=<span class="number">2000</span></span><br><span class="line">thread_cache_size=<span class="number">400</span></span><br><span class="line">server-id=<span class="number">1</span></span><br><span class="line">lower_case_table_names=<span class="number">1</span></span><br><span class="line">skip-external-locking</span><br><span class="line">local_infile=<span class="number">0</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">default-storage-engine=InnoDB</span><br><span class="line">transaction_isolation=READ-COMMITTED</span><br><span class="line">autocommit=<span class="number">1</span></span><br><span class="line">sql_mode=TRADITIONAL</span><br><span class="line">max_allowed_packet=<span class="number">256</span>M</span><br><span class="line">show_compatibility_56=<span class="number">1</span></span><br><span class="line">interactive_timeout=<span class="number">7200</span></span><br><span class="line">wait_timeout=<span class="number">7200</span></span><br><span class="line">user=mysql</span><br><span class="line">early-plugin-load=<span class="string">&#x27;&#x27;</span></span><br><span class="line">skip-ssl</span><br><span class="line">explicit_defaults_for_timestamp=<span class="number">1</span></span><br><span class="line">symbolic-links=<span class="number">0</span></span><br><span class="line">query_cache_type=<span class="number">0</span></span><br><span class="line">query_cache_size=<span class="number">0</span></span><br><span class="line">enforce-gtid-consistency</span><br><span class="line">innodb_undo_tablespaces=<span class="number">16</span></span><br><span class="line">innodb_max_undo_log_size=<span class="number">1</span>G</span><br><span class="line">innodb_undo_logs=<span class="number">128</span></span><br><span class="line">innodb_undo_log_truncate=<span class="number">1</span></span><br><span class="line">innodb_purge_rseg_truncate_frequency=<span class="number">128</span></span><br><span class="line">innodb_data_file_path=ibdata1:<span class="number">10</span>M:autoextend</span><br><span class="line">innodb_autoextend_increment=<span class="number">128</span></span><br><span class="line">innodb_file_per_table=<span class="number">1</span></span><br><span class="line">innodb_log_files_in_group=<span class="number">4</span></span><br><span class="line">innodb_log_file_size=<span class="number">128</span>M</span><br><span class="line">innodb_log_buffer_size=<span class="number">8</span>M</span><br><span class="line">innodb_flush_log_at_trx_commit=<span class="number">1</span></span><br><span class="line">innodb_buffer_pool_size=<span class="number">4</span>G</span><br><span class="line">innodb_buffer_pool_instances=<span class="number">4</span></span><br><span class="line">innodb_old_blocks_pct=<span class="number">40</span></span><br><span class="line">innodb_max_dirty_pages_pct=<span class="number">90</span></span><br><span class="line">innodb_io_capacity=<span class="number">200</span></span><br><span class="line">innodb_io_capacity_max=<span class="number">2000</span></span><br><span class="line">innodb_doublewrite=<span class="number">1</span></span><br><span class="line">sort_buffer_size=<span class="number">8</span>M</span><br><span class="line">join_buffer_size=<span class="number">8</span>M</span><br><span class="line">innodb_lock_wait_timeout=<span class="number">30</span></span><br><span class="line">innodb_thread_concurrency=<span class="number">4</span></span><br><span class="line">tmp_table_size=<span class="number">256</span>M</span><br><span class="line">max_heap_table_size=<span class="number">128</span>M</span><br><span class="line">innodb_temp_data_file_path=ibtmp1:<span class="number">12</span>M:autoextend:max:<span class="number">4</span>G</span><br><span class="line">log_timestamps=SYSTEM</span><br><span class="line">innodb_stats_auto_recalc=<span class="number">1</span></span><br><span class="line">innodb_stats_persistent=<span class="number">1</span></span><br><span class="line">log_output=<span class="string">&#x27;TABLE&#x27;</span></span><br><span class="line">slow_query_log=<span class="number">0</span></span><br><span class="line">min_examined_row_limit=<span class="number">0</span></span><br><span class="line">log_queries_not_using_indexes=<span class="number">0</span></span><br><span class="line">log_throttle_queries_not_using_indexes=<span class="number">20</span></span><br><span class="line">log_slow_admin_statements=<span class="number">1</span></span><br><span class="line">general_log=<span class="number">0</span></span><br><span class="line">concurrent_insert=<span class="number">1</span></span><br><span class="line">key_buffer_size=<span class="number">128</span>M</span><br><span class="line">read_buffer_size=<span class="number">2</span>M</span><br><span class="line">read_rnd_buffer_size=<span class="number">8</span>M</span><br><span class="line">myisam_sort_buffer_size=<span class="number">64</span>M</span><br><span class="line">log_slave_updates=<span class="number">0</span></span><br><span class="line">relay_log_purge = <span class="number">1</span></span><br><span class="line">relay_log_recovery = <span class="number">1</span></span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line">slave_parallel_workers=<span class="number">2</span></span><br><span class="line">slave_parallel_type=LOGICAL_CLOCK</span><br><span class="line">EOF</span><br><span class="line">echo <span class="string">&quot;==========================configuring mysql,please wait================================&quot;</span></span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=<span class="regexp">/usr/</span>local/mysql \</span><br><span class="line"> -DMYSQL_DATADIR=<span class="regexp">/data/my</span>sql/data \</span><br><span class="line"> -DSYSCONFDIR=/etc \</span><br><span class="line"> -DWITH_READLINE=<span class="number">1</span> \</span><br><span class="line"> -DMYSQL_UNIX_ADDR=<span class="regexp">/tmp/my</span>sql.sock \</span><br><span class="line"> -DMYSQL_TCP_PORT=<span class="number">3306</span> \</span><br><span class="line"> -DENABLED_LOCAL_INFILE=<span class="number">1</span> \</span><br><span class="line"> -DENABLE_DOWNLOADS=<span class="number">1</span> \</span><br><span class="line"> -DWITH_PARTITION_STORAGE_ENGINE=<span class="number">1</span> \</span><br><span class="line"> -DEXTRA_CHARSETS=all \</span><br><span class="line"> -DDEFAULT_CHARSET=utf8 \</span><br><span class="line"> -DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line"> -DWITH_DEBUG=<span class="number">0</span> \</span><br><span class="line"> -DWITH_SSH=system \</span><br><span class="line"> -DMYSQL_MAINTAINER_MODE=<span class="number">0</span> \</span><br><span class="line"> -DWITH_BOOST=boost &gt;<span class="regexp">/dev/</span>null</span><br><span class="line">echo <span class="string">&quot;==========================make mysql, pleas,please wait================================&quot;</span></span><br><span class="line">make  &amp;&amp; make install </span><br><span class="line"><span class="keyword">if</span> [ $? -ne <span class="number">0</span> ];then</span><br><span class="line">echo <span class="string">&quot;make failed ,please check it out!&quot;</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line">mkdir -p <span class="string">&quot;$&#123;MYSQL_DATA_HOME&#125;&quot;</span> </span><br><span class="line">chown -R mysql:mysql <span class="variable">$MYSQL_HOME</span></span><br><span class="line">chown -R mysql:mysql <span class="variable">$MYSQL_DATA_HOME</span></span><br><span class="line"><span class="variable">$MYSQL_HOME</span><span class="regexp">/bin/my</span>sqld --initialize-insecure --user=<span class="variable">$USER</span></span><br><span class="line">cp <span class="variable">$MYSQL_HOME</span><span class="regexp">/support-files/my</span>sql.server <span class="regexp">/etc/i</span>nit.d/mysql</span><br><span class="line">echo <span class="string">&quot;export PATH=$PATH:/usr/local/mysql/bin/&quot;</span> &gt;&gt;<span class="regexp">/etc/</span>profile</span><br><span class="line">source <span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="regexp">/etc/i</span>nit.d/mysql start</span><br><span class="line">echo <span class="string">&quot;==========================Mysql installation completed================================&quot;</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>注意事项：</p>
<p> 1.mysql 密码默认为空</p>
]]></content>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制部署Kubernetes集群</title>
    <url>/2021/04/28/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2Kubernetes%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是Kubernetes？"><a href="#什么是Kubernetes？" class="headerlink" title="什么是Kubernetes？"></a>什么是Kubernetes？</h2><p>Kubernetes是Google开源的一个容器编排引擎，它支持自动化部署、大规模可伸缩、应用容器化管理。在生产环境中部署一个应用程序时，通常要部署该应用的多个实例以便对应用请求进行负载均衡。</p>
<p>在Kubernetes中，我们可以创建多个容器，每个容器里面运行一个应用实例，然后通过内置的负载均衡策略，实现对这一组应用实例的管理、发现、访问，而这些细节都不需要运维人员去进行复杂的手工配置和处理。</p>
<h2 id="Kubernetes-官方提供的三种部署方式"><a href="#Kubernetes-官方提供的三种部署方式" class="headerlink" title="Kubernetes 官方提供的三种部署方式"></a>Kubernetes 官方提供的三种部署方式</h2><h3 id="minikube"><a href="#minikube" class="headerlink" title="minikube"></a>minikube</h3><p>Minikube是一个工具，可以在本地快速运行一个单点的Kubernetes，仅用于尝试Kubernetes或日常开发的用户使用。部署地址：<a href="https://kubernetes.io/docs/setup/minikube/">https://kubernetes.io/docs/setup/minikube/</a></p>
<h3 id="kubeadm"><a href="#kubeadm" class="headerlink" title="kubeadm"></a>kubeadm</h3><p>Kubeadm也是一个工具，提供kubeadm init和kubeadm join，用于快速部署Kubernetes集群。</p>
<span id="more"></span>
<p>Kubeadm 降低部署门槛，但屏蔽了很多细节，遇到问题很难排查。如果想更容易可控，推荐使 用二进制包部署 Kubernetes 集群，虽然手动部署麻烦点，期间可以学习很多工作原理，也利 于后期维护。</p>
<p> 部署地址：<a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/">https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/</a> </p>
<h3 id="二进制包"><a href="#二进制包" class="headerlink" title="二进制包"></a>二进制包</h3><p>推荐，从官方下载发行版的二进制包，手动部署每个组件，组成Kubernetes集群。下载地址：<a href="https://github.com/kubernetes/kubernetes/releases">https://github.com/kubernetes/kubernetes/releases</a></p>
<p>这里采用二进制包的方式部署Kubernetes集群</p>
<p><strong>安装要求</strong></p>
<p>  在开始之前，部署 Kubernetes 集群机器需要满足以下几个条件： </p>
<ul>
<li><p>一台或多台机器，操作系统 CentOS7.x-86_x64 </p>
</li>
<li><p>硬件配置：2GB 或更多 RAM，2 个 CPU 或更多 CPU，硬盘 30GB 或更多 </p>
</li>
<li><p>集群中所有机器之间网络互通 </p>
</li>
<li><p>可以访问外网，需要拉取镜像，如果服务器不能上网，需要提前下载镜像并导入节点</p>
</li>
<li><p>禁止 swap 分区</p>
</li>
</ul>
<h1 id="集群环境规划"><a href="#集群环境规划" class="headerlink" title="集群环境规划"></a>集群环境规划</h1><h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><table>
<thead>
<tr>
<th align="left">软件</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td align="left">操作系统</td>
<td>CentOS Linux release 7.8.2003 (Core)</td>
</tr>
<tr>
<td align="left">Docker</td>
<td>19-ce</td>
</tr>
<tr>
<td align="left">Etcd</td>
<td>3.4.9</td>
</tr>
<tr>
<td align="left">Kubernetes</td>
<td>1.20</td>
</tr>
</tbody></table>
<h2 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h2><table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
<th>组件</th>
</tr>
</thead>
<tbody><tr>
<td>mster</td>
<td>10.150.1.35</td>
<td>kube-apiserver，kube-controller-manager，kube-scheduler， etcd</td>
</tr>
<tr>
<td>node1</td>
<td>10.150.1.36</td>
<td>kubelet，kube-proxy，docker，etcd</td>
</tr>
<tr>
<td>node2</td>
<td>10.150.1.37</td>
<td>kubelet，kube-proxy，docker，etcd</td>
</tr>
</tbody></table>
<h1 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h1><p>所有节点均需执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># 关闭 selinux</span></span><br><span class="line">sed -i <span class="string">&#x27;s/enforcing/disabled/&#x27;</span> /etc/selinux/config <span class="comment"># 永久</span></span><br><span class="line">setenforce 0 <span class="comment"># 临时</span></span><br><span class="line"><span class="comment"># 关闭 swap</span></span><br><span class="line">swapoff -a <span class="comment"># 临时</span></span><br><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab <span class="comment"># 永久</span></span><br><span class="line"><span class="comment"># 根据规划设置主机名</span></span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br><span class="line"><span class="comment"># 在 master 添加 hosts</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">10.150.1.35 k8s-master</span></span><br><span class="line"><span class="string">10.150.1.36 k8s-node1</span></span><br><span class="line"><span class="string">10.150.1.37 k8s-node2</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment"># 将桥接的 IPv4 流量传递到 iptables 的链</span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sysctl --system <span class="comment"># 生效</span></span><br><span class="line"><span class="comment"># 时间同步</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure>

<h1 id="部署etcd集群"><a href="#部署etcd集群" class="headerlink" title="部署etcd集群"></a>部署etcd集群</h1><p>Etcd 是一个分布式键值存储系统，Kubernetes 使用 Etcd 进行数据存储，所以先准备一个 Etcd 数据库，为解决Etcd 单点故障，应采用集群方式部署，这里使用 3 台组建集群，可容忍 1 台 机器故障，当然，你也可以使用 5 台组建集群，可容忍 2 台机器故障。</p>
<table>
<thead>
<tr>
<th align="left">节点名称</th>
<th>IP</th>
</tr>
</thead>
<tbody><tr>
<td align="left">etcd-1</td>
<td>10.150.1.35</td>
</tr>
<tr>
<td align="left">etcd-2</td>
<td>10.150.1.36</td>
</tr>
<tr>
<td align="left">etcd-3</td>
<td>10.150.1.37</td>
</tr>
</tbody></table>
<p>注：为了节省机器，这里与 K8s 节点机器复用。也可以独立于 k8s 集群之外部署，只要 apiserver 能连接到就行。</p>
<h2 id="准备-cfssl-证书生成工具"><a href="#准备-cfssl-证书生成工具" class="headerlink" title="准备 cfssl 证书生成工具"></a>准备 cfssl 证书生成工具</h2><p>cfssl 是一个开源的证书管理工具，使用 json 文件生成证书，相比 openssl 更方便使用。 找任意一台服务器操作，这里用 Master 节点。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span><br><span class="line">chmod +x cfssl_linux-amd64 cfssljson_linux-amd64 cfssl-certinfo_linux-amd64</span><br><span class="line">mv cfssl_linux-amd64 /usr/local/bin/cfssl</span><br><span class="line">mv cfssljson_linux-amd64 /usr/local/bin/cfssljson</span><br><span class="line">mv cfssl-certinfo_linux-amd64 /usr/bin/cfssl-certinfo</span><br></pre></td></tr></table></figure>

<h2 id="生成-etcd-证书"><a href="#生成-etcd-证书" class="headerlink" title="生成 etcd 证书"></a>生成 etcd 证书</h2><h3 id="自签证书颁发机构（CA）"><a href="#自签证书颁发机构（CA）" class="headerlink" title="自签证书颁发机构（CA）"></a>自签证书颁发机构（CA）</h3><p>创建工作目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/TLS/&#123;etcd,k8s&#125;</span><br><span class="line">cd TLS/etcd</span><br></pre></td></tr></table></figure>

<p>自签CA：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;signing&quot;: &#123;</span><br><span class="line">    &quot;default&quot;: &#123;</span><br><span class="line">      &quot;expiry&quot;: &quot;87600h&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;profiles&quot;: &#123;</span><br><span class="line">      &quot;www&quot;: &#123;</span><br><span class="line">         &quot;expiry&quot;: &quot;87600h&quot;,</span><br><span class="line">         &quot;usages&quot;: [</span><br><span class="line">            &quot;signing&quot;,</span><br><span class="line">            &quot;key encipherment&quot;,</span><br><span class="line">            &quot;server auth&quot;,</span><br><span class="line">            &quot;client auth&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">     &quot;CN&quot;: &quot;etcd CA&quot;,</span><br><span class="line">     &quot;key&quot;: &#123;&quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">     &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">     &quot;size&quot;: 2048</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;names&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">             &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">             &quot;L&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;Beijing&quot;</span><br><span class="line">         &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>生成证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line">ls *pem</span><br><span class="line">ca-key.pem ca.pem</span><br></pre></td></tr></table></figure>

<h3 id="使用自签CA签发Etcd-HTTPS证书"><a href="#使用自签CA签发Etcd-HTTPS证书" class="headerlink" title="使用自签CA签发Etcd HTTPS证书"></a>使用自签CA签发Etcd HTTPS证书</h3><p>创建证书申请文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; server-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">     &quot;CN&quot;: &quot;etcd&quot;,</span><br><span class="line">     &quot;hosts&quot;: [</span><br><span class="line">     &quot;10.150.1.35&quot;,</span><br><span class="line">     &quot;10.150.1.36&quot;,</span><br><span class="line">     &quot;10.150.1.37&quot;</span><br><span class="line">     ],</span><br><span class="line">     &quot;key&quot;: &#123;</span><br><span class="line">         &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">         &quot;size&quot;: 2048</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;names&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">             &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">             &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">             &quot;ST&quot;: &quot;BeiJing&quot;</span><br><span class="line">          &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>注：上述文件 hosts 字段中 IP 为所有 etcd 节点的集群内部通信 IP，一个都不能少！为了方便 后期扩容可以多写几个预留的 IP。</p>
<p>生成证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=www server-csr.json | cfssljson -bare server</span><br></pre></td></tr></table></figure>

<h2 id="从-Github-下载二进制文件"><a href="#从-Github-下载二进制文件" class="headerlink" title="从 Github 下载二进制文件"></a>从 Github 下载二进制文件</h2><p> 下载地址： <a href="https://github.com/etcd-io/etcd/releases/download/v3.4.9/etcd-v3.4.9-linux-amd64.tar.gz">https://github.com/etcd-io/etcd/releases/download/v3.4.9/etcd-v3.4.9-linux-amd64.tar.gz</a></p>
<h2 id="部署-Etcd-集群"><a href="#部署-Etcd-集群" class="headerlink" title="部署 Etcd 集群"></a>部署 Etcd 集群</h2><p>以下在节点 1 上操作，为简化操作，待会将节点 1 生成的所有文件拷贝到节点 2 和节点3</p>
<h3 id="创建工作目录并解压二进制包"><a href="#创建工作目录并解压二进制包" class="headerlink" title="创建工作目录并解压二进制包"></a>创建工作目录并解压二进制包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /opt/etcd/&#123;bin,cfg,ssl&#125; -p</span><br><span class="line">tar zxvf etcd-v3.4.9-linux-amd64.tar.gz</span><br><span class="line">mv etcd-v3.4.9-linux-amd64/&#123;etcd,etcdctl&#125; /opt/etcd/bin/</span><br></pre></td></tr></table></figure>

<h3 id="创建etcd配置文件"><a href="#创建etcd配置文件" class="headerlink" title="创建etcd配置文件"></a>创建etcd配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/etcd/cfg/etcd.conf &lt;&lt; EOF</span><br><span class="line"><span class="meta">#</span><span class="bash">[Member]</span></span><br><span class="line">ETCD_NAME=&quot;etcd-1&quot;</span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;https://10.150.1.35:2380&quot;</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;https://10.150.1.35:2379&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;https://10.150.1.35:2380&quot;</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;https://10.150.1.35:2379&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd-1=https://10.150.1.35:2380,etcd-2=https://10.150.1.36:2380,etcd-3=https://10.150.1.37:2380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ul>
<li><p>ETCD_NAME：节点名称，集群中唯一 </p>
</li>
<li><p>ETCD_DATA_DIR：数据目录 </p>
</li>
<li><p>ETCD_LISTEN_PEER_URLS：集群通信监听地址 </p>
</li>
<li><p>ETCD_LISTEN_CLIENT_URLS：客户端访问监听地址 </p>
</li>
<li><p>ETCD_INITIAL_ADVERTISE_PEER_URLS：集群通告地址 </p>
</li>
<li><p>ETCD_ADVERTISE_CLIENT_URLS：客户端通告地址 </p>
</li>
<li><p>ETCD_INITIAL_CLUSTER：集群节点地址 </p>
</li>
<li><p>ETCD_INITIAL_CLUSTER_TOKEN：集群 Token </p>
</li>
<li><p>ETCD_INITIAL_CLUSTER_STATE：加入集群的当前状态，new 是新集群，existing 表示加入已有 集群</p>
</li>
</ul>
<h3 id="systemd管理etcd"><a href="#systemd管理etcd" class="headerlink" title="systemd管理etcd"></a>systemd管理etcd</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/etcd.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">EnvironmentFile=/opt/etcd/cfg/etcd.conf</span><br><span class="line">ExecStart=/opt/etcd/bin/etcd \</span><br><span class="line">--cert-file=/opt/etcd/ssl/server.pem \</span><br><span class="line">--key-file=/opt/etcd/ssl/server-key.pem \</span><br><span class="line">--peer-cert-file=/opt/etcd/ssl/server.pem \</span><br><span class="line">--peer-key-file=/opt/etcd/ssl/server-key.pem \</span><br><span class="line">--trusted-ca-file=/opt/etcd/ssl/ca.pem \</span><br><span class="line">--peer-trusted-ca-file=/opt/etcd/ssl/ca.pem \</span><br><span class="line">--logger=zap</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="拷贝刚才生成的证书"><a href="#拷贝刚才生成的证书" class="headerlink" title="拷贝刚才生成的证书"></a>拷贝刚才生成的证书</h3><p>把刚才生成的证书拷贝到配置文件中的路径：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp ~/TLS/etcd/ca*pem ~/TLS/etcd/server*pem /opt/etcd/ssl/</span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动"><a href="#启动并设置开机启动" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl enable etcd</span><br></pre></td></tr></table></figure>

<p>注：1节点的etcd需要等2节点和3节点启动后才可启动，不然会起不来</p>
<p>将上面节点 1 所有生成的文件拷贝到节点 2 和节点 3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp -r /opt/etcd/ root@k8s-node1:/opt/</span><br><span class="line">scp /usr/lib/systemd/system/etcd.service root@k8s-node1:/usr/lib/systemd/system/</span><br><span class="line">scp -r /opt/etcd/ root@k8s-node2:/opt/</span><br><span class="line">scp /usr/lib/systemd/system/etcd.service root@k8s-node2:/usr/lib/systemd/system/</span><br></pre></td></tr></table></figure>

<p>然后在节点 2 和节点 3 分别修改 etcd.conf 配置文件中的节点名称和当前服务器 IP：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /opt/etcd/cfg/etcd.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">[Member]</span></span><br><span class="line">ETCD_NAME=&quot;etcd-1&quot; # 修改此处，节点 2 改为 etcd-2，节点 3 改为 etcd3</span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;https://10.150.1.35:2380&quot; # 修改此处为当前服务器 IP</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;https://10.150.1.35:2379&quot; # 修改此处为当前服务器 IP</span><br><span class="line"><span class="meta">#</span><span class="bash">[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;https://10.150.1.35:2380&quot; # 修改此处为当前服务</span><br><span class="line">器 IP</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;https://10.150.1.35:2379&quot; # 修改此处为当前服务器 IP</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd-1=https://10.150.1.35:2380,etcd-2=https://10.150.1.36:2380,etcd-3=https://10.150.1.37:2380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br></pre></td></tr></table></figure>

<p>最后启动 etcd 并设置开机启动，同上。注：首先需要启动2节点和3节点后才可启动1节点</p>
<h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ETCDCTL_API=3 /opt/etcd/bin/etcdctl --cacert=/opt/etcd/ssl/ca.pem --cert=/opt/etcd/ssl/server.pem --key=/opt/etcd/ssl/server-key.pem --endpoints=&quot;https://10.150.1.35:2379,https://10.150.1.36:2379,https://10.150.1.37:2379&quot; endpoint health</span><br><span class="line">https://10.150.1.35:2379 is healthy: successfully committed proposal: took = 25.510959ms</span><br><span class="line">https://10.150.1.37:2379 is healthy: successfully committed proposal: took = 32.2567ms</span><br><span class="line">https://10.150.1.36:2379 is healthy: successfully committed proposal: took = 34.589319ms</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> 如果输出上面信息，就说明集群部署成功。如果有问题第一步先看日志：/var/log/message 或 journalctl -u etcd</p>
<h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>下载地址： <a href="https://download.docker.com/linux/static/stable/x86_64/docker-19.03.9.tgz">https://download.docker.com/linux/static/stable/x86_64/docker-19.03.9.tgz</a></p>
<p>以下在所有节点操作。这里采用二进制安装，用 yum 安装也一样</p>
<h2 id="解压二进制包"><a href="#解压二进制包" class="headerlink" title="解压二进制包"></a>解压二进制包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf docker-19.03.9.tgz</span><br><span class="line">mv docker/* /usr/bin</span><br></pre></td></tr></table></figure>

<h2 id="systemd管理docker"><a href="#systemd管理docker" class="headerlink" title="systemd管理docker"></a>systemd管理docker</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/docker.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.serviceWants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP \$MAINPID</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">Delegate=yes</span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /etc/docker</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p> registry-mirrors 阿里云镜像加速器</p>
<h2 id="启动并设置开机启动-1"><a href="#启动并设置开机启动-1" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>

<h1 id="部署Master-Node"><a href="#部署Master-Node" class="headerlink" title="部署Master Node"></a>部署Master Node</h1><h2 id="部署-kube-apiserver"><a href="#部署-kube-apiserver" class="headerlink" title="部署 kube-apiserver"></a>部署 kube-apiserver</h2><h3 id="生成kube-apiserver证书（CA）"><a href="#生成kube-apiserver证书（CA）" class="headerlink" title="生成kube-apiserver证书（CA）"></a>生成kube-apiserver证书（CA）</h3><p>1.自签证书颁发机构（CA）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入到工作目录</span></span><br><span class="line">cd TLS/k8s</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">   &quot;signing&quot;: &#123;</span><br><span class="line">     &quot;default&quot;: &#123;</span><br><span class="line">       &quot;expiry&quot;: &quot;87600h&quot;</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;profiles&quot;: &#123;</span><br><span class="line">       &quot;kubernetes&quot;: &#123;</span><br><span class="line">          &quot;expiry&quot;: &quot;87600h&quot;,</span><br><span class="line">          &quot;usages&quot;: [</span><br><span class="line">             &quot;signing&quot;,</span><br><span class="line">             &quot;key encipherment&quot;,</span><br><span class="line">             &quot;server auth&quot;,</span><br><span class="line">             &quot;client auth&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;kubernetes&quot;,</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;Beijing&quot;,</span><br><span class="line">           &quot;ST&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;k8s&quot;,</span><br><span class="line">           &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">         &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>生成证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line">ls *pem</span><br><span class="line">ca-key.pem ca.pem</span><br></pre></td></tr></table></figure>



<h3 id="使用自签CA签发kube-apiserver-HTTPS证书"><a href="#使用自签CA签发kube-apiserver-HTTPS证书" class="headerlink" title="使用自签CA签发kube-apiserver HTTPS证书"></a>使用自签CA签发kube-apiserver HTTPS证书</h3><p>创建证书申请文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; server-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;kubernetes&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">      &quot;10.0.0.1&quot;,</span><br><span class="line">      &quot;127.0.0.1&quot;,</span><br><span class="line">      &quot;10.150.1.35&quot;,</span><br><span class="line">      &quot;10.150.1.36&quot;,</span><br><span class="line">      &quot;10.150.1.37&quot;,</span><br><span class="line">      &quot;10.150.1.38&quot;,</span><br><span class="line">      &quot;10.150.1.39&quot;,</span><br><span class="line">      &quot;10.150.1.40&quot;,</span><br><span class="line">      &quot;10.150.1.41&quot;,</span><br><span class="line">      &quot;10.150.1.42&quot;,</span><br><span class="line">      &quot;10.150.1.43&quot;,</span><br><span class="line">      &quot;10.150.1.44&quot;,</span><br><span class="line">      &quot;10.150.1.45&quot;,</span><br><span class="line">      &quot;kubernetes&quot;,</span><br><span class="line">      &quot;kubernetes.default&quot;,</span><br><span class="line">      &quot;kubernetes.default.svc&quot;,</span><br><span class="line">      &quot;kubernetes.default.svc.cluster&quot;,</span><br><span class="line">      &quot;kubernetes.default.svc.cluster.local&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">         &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">         &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">           &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">            &quot;O&quot;: &quot;k8s&quot;,</span><br><span class="line">           &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">         &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>生成证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes server-csr.json | cfssljson -bare server</span><br><span class="line">ls server*pem</span><br><span class="line">server-key.pem server.pem</span><br></pre></td></tr></table></figure>

<h2 id="从-Github-下载二进制文件-1"><a href="#从-Github-下载二进制文件-1" class="headerlink" title="从 Github 下载二进制文件"></a>从 Github 下载二进制文件</h2><p><a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md</a></p>
<p>注：打开链接你会发现里面有很多包，下载一个 server 包就够了，包含了 Master 和 Worker Node 二进制文件。</p>
<h2 id="解压二进制包-1"><a href="#解压二进制包-1" class="headerlink" title="解压二进制包"></a>解压二进制包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.20.6/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">mkdir -p /opt/kubernetes/&#123;bin,cfg,ssl,logs&#125;</span><br><span class="line">tar zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">cd kubernetes/server/bin</span><br><span class="line">cp kube-apiserver kube-scheduler kube-controller-manager /opt/kubernetes/bin</span><br><span class="line">cp kubectl /usr/bin/</span><br></pre></td></tr></table></figure>

<h2 id="部署kube-apiserver"><a href="#部署kube-apiserver" class="headerlink" title="部署kube-apiserver"></a>部署kube-apiserver</h2><h3 id="创建配置文件-1"><a href="#创建配置文件-1" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-apiserver.conf &lt;&lt; EOF</span><br><span class="line">KUBE_APISERVER_OPTS=&quot;--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--etcd-servers=https://10.150.1.35:2379,https://10.150.1.36:2379,https://10.150.1.37:2379 \\</span><br><span class="line">--bind-address=10.150.1.35 \\</span><br><span class="line">--secure-port=6443 \\</span><br><span class="line">--advertise-address=10.150.1.35 \\</span><br><span class="line">--allow-privileged=true \\</span><br><span class="line">--service-cluster-ip-range=10.0.0.0/24 \\</span><br><span class="line">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,NodeRestriction \\</span><br><span class="line">--authorization-mode=RBAC,Node \\</span><br><span class="line">--enable-bootstrap-token-auth=true \\</span><br><span class="line">--token-auth-file=/opt/kubernetes/cfg/token.csv \\</span><br><span class="line">--service-node-port-range=30000-32767 \\</span><br><span class="line">--kubelet-client-certificate=/opt/kubernetes/ssl/server.pem \\</span><br><span class="line">--kubelet-client-key=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--tls-cert-file=/opt/kubernetes/ssl/server.pem  \\</span><br><span class="line">--tls-private-key-file=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--client-ca-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-key-file=/opt/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">--service-account-issuer=api \\</span><br><span class="line">--service-account-signing-key-file=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--etcd-cafile=/opt/etcd/ssl/ca.pem \\</span><br><span class="line">--etcd-certfile=/opt/etcd/ssl/server.pem \\</span><br><span class="line">--etcd-keyfile=/opt/etcd/ssl/server-key.pem \\</span><br><span class="line">--requestheader-client-ca-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--proxy-client-cert-file=/opt/kubernetes/ssl/server.pem \\</span><br><span class="line">--proxy-client-key-file=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--requestheader-allowed-names=kubernetes \\</span><br><span class="line">--requestheader-extra-headers-prefix=X-Remote-Extra- \\</span><br><span class="line">--requestheader-group-headers=X-Remote-Group \\</span><br><span class="line">--requestheader-username-headers=X-Remote-User \\</span><br><span class="line">--enable-aggregator-routing=true \\</span><br><span class="line">--audit-log-maxage=30 \\</span><br><span class="line">--audit-log-maxbackup=3 \\</span><br><span class="line">--audit-log-maxsize=100 \\</span><br><span class="line">--audit-log-path=/opt/kubernetes/logs/k8s-audit.log&quot;</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注：上面两个\ \ 第一个是转义符，第二个是换行符，使用转义符是为了使用 EOF 保留换行符</p>
<ul>
<li><p>–logtostderr：启用日志</p>
</li>
<li><p>—v：日志等级</p>
</li>
<li><p>–log-dir：日志目录</p>
</li>
<li><p>–etcd-servers：etcd集群地址</p>
</li>
<li><p>–bind-address：监听地址</p>
</li>
<li><p>–secure-port：https安全端口</p>
</li>
<li><p>–advertise-address：集群通告地址</p>
</li>
<li><p>–allow-privileged：启用授权</p>
</li>
<li><p>–service-cluster-ip-range：Service虚拟IP地址段</p>
</li>
<li><p>–enable-admission-plugins：准入控制模块</p>
</li>
<li><p>–authorization-mode：认证授权，启用RBAC授权和节点自管理</p>
</li>
<li><p>–enable-bootstrap-token-auth：启用TLS bootstrap机制</p>
</li>
<li><p>–token-auth-file：bootstrap token文件</p>
</li>
<li><p>–service-node-port-range：Service nodeport类型默认分配端口范围</p>
</li>
<li><p>–kubelet-client-xxx：apiserver访问kubelet客户端证书</p>
</li>
<li><p>–tls-xxx-file：apiserver https证书</p>
</li>
<li><p>1.20版本必须加的参数：–service-account-issuer，–service-account-signing-key-file</p>
</li>
<li><p>–etcd-xxxfile：连接Etcd集群证书</p>
</li>
<li><p>–audit-log-xxx：审计日志</p>
</li>
<li><p>启动聚合层相关配置：–requestheader-client-ca-file，–proxy-client-cert-file，–proxy-client-key-file，–requestheader-allowed-names，–requestheader-extra-headers-prefix，–requestheader-group-headers，–requestheader-username-headers，–enable-aggregator-routing</p>
</li>
</ul>
<p>拷贝刚才生成的证书 把刚才生成的证书拷贝到配置文件中的路径：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp ~/TLS/k8s/ca*pem ~/TLS/k8s/server*pem /opt/kubernetes/ssl/</span><br></pre></td></tr></table></figure>

<h3 id="启用-TLS-Bootstrapping-机制"><a href="#启用-TLS-Bootstrapping-机制" class="headerlink" title="启用 TLS Bootstrapping 机制"></a>启用 TLS Bootstrapping 机制</h3><p>TLS Bootstraping：Master apiserver 启用 TLS 认证后，Node 节点 kubelet 和 kube-proxy 要 与 kube-apiserver 进行通信，必须使用 CA 签发的有效证书才可以，当 Node 节点很多时，这 种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。为了简化流程，Kubernetes 引入了 TLS bootstraping 机制来自动颁发客户端证书，kubelet 会以一个低权限用户自动向 apiserver 申请证书，kubelet 的证书由 apiserver 动态签署。所以强烈建议在 Node 上使用这 种方式，目前主要用于 kubelet，kube-proxy 还是由我们统一颁发一个证书。</p>
<p> TLS bootstraping 工作流程：</p>
<p><img src="https://img.ssmwolf.com/images/image-20210429112608549.png"></p>
<p>创建上述配置文件中 token 文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/token.csv &lt;&lt; EOF </span><br><span class="line">741b5f19602dedbbcd4b1fb5c5248225,kubelet-bootstrap,10001,system:node-bootstrapper </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>格式：token,用户名，UID，用户组</p>
<p>注意： 741b5f19602dedbbcd4b1fb5c5248225,kubelet-bootstrap,10001,“system:node-bootstrapper” 引号会导致error: invalid authentication config: parse error on line 1, column 82: extraneous or missing “ in quoted-field</p>
<p>token 也可自行生成替换：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">head -c 16 /dev/urandom | od -An -t x | tr -d &#x27; &#x27;</span><br></pre></td></tr></table></figure>

<h3 id="systemd管理apiserver"><a href="#systemd管理apiserver" class="headerlink" title="systemd管理apiserver"></a>systemd管理apiserver</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-apiserver.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-apiserver \$KUBE_APISERVER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>注：“\$KUBE_APISERVER_OPTS”  \号为cat命令$符号转义所需，实际生成的文件里面是没有\符号的。</p>
<h3 id="启动并设置开机启动-2"><a href="#启动并设置开机启动-2" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-apiserver</span><br><span class="line">systemctl enable kube-apiserver</span><br></pre></td></tr></table></figure>

<h2 id="部署-kube-controller-manager"><a href="#部署-kube-controller-manager" class="headerlink" title="部署 kube-controller-manager"></a>部署 kube-controller-manager</h2><h3 id="创建配置文件-2"><a href="#创建配置文件-2" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-controller-manager.conf &lt;&lt; EOF</span><br><span class="line">KUBE_CONTROLLER_MANAGER_OPTS=&quot;--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--leader-elect=true \\</span><br><span class="line">--kubeconfig=/opt/kubernetes/cfg/kube-controller-manager.kubeconfig \\</span><br><span class="line">--bind-address=127.0.0.1 \\</span><br><span class="line">--allocate-node-cidrs=true \\</span><br><span class="line">--cluster-cidr=10.244.0.0/16 \\</span><br><span class="line">--service-cluster-ip-range=10.0.0.0/24 \\</span><br><span class="line">--cluster-signing-cert-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--cluster-signing-key-file=/opt/kubernetes/ssl/ca-key.pem  \\</span><br><span class="line">--root-ca-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-private-key-file=/opt/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">--cluster-signing-duration=87600h0m0s&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ul>
<li>  –kubeconfig：连接apiserver配置文件</li>
<li>   –leader-elect：当该组件启动多个时，自动选举（HA）</li>
<li>   –cluster-signing-cert-file/–cluster-signing-key-file：自动为kubelet颁发证书的CA，与apiserver保持一致</li>
</ul>
<p>生成kubeconfig文件</p>
<p>生成kube-controller-manager证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换工作目录</span></span><br><span class="line">cd ~/TLS/k8s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建证书请求文件</span></span><br><span class="line">cat &gt; kube-controller-manager-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;system:kube-controller-manager&quot;,</span><br><span class="line">  &quot;hosts&quot;: [],</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;names&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">      &quot;L&quot;: &quot;BeiJing&quot;, </span><br><span class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;O&quot;: &quot;system:masters&quot;,</span><br><span class="line">      &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager</span><br></pre></td></tr></table></figure>

<p>生成kubeconfig文件（以下是shell命令，直接在终端执行）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">KUBE_CONFIG=&quot;/opt/kubernetes/cfg/kube-controller-manager.kubeconfig&quot;</span><br><span class="line">KUBE_APISERVER=&quot;https://10.150.1.35:6443&quot;</span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-credentials kube-controller-manager \</span><br><span class="line">  --client-certificate=./kube-controller-manager.pem \</span><br><span class="line">  --client-key=./kube-controller-manager-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-controller-manager \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config use-context default --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="systemd管理controller-manager"><a href="#systemd管理controller-manager" class="headerlink" title="systemd管理controller-manager"></a>systemd管理controller-manager</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-controller-manager.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-controller-manager \$KUBE_CONTROLLER_MANAGER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动-3"><a href="#启动并设置开机启动-3" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-controller-manager</span><br><span class="line">systemctl enable kube-controller-manager</span><br></pre></td></tr></table></figure>

<h3 id="部署kube-scheduler"><a href="#部署kube-scheduler" class="headerlink" title="部署kube-scheduler"></a>部署kube-scheduler</h3><p>创建配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-scheduler.conf &lt;&lt; EOF</span><br><span class="line">KUBE_SCHEDULER_OPTS=&quot;--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--leader-elect \\</span><br><span class="line">--kubeconfig=/opt/kubernetes/cfg/kube-scheduler.kubeconfig \\</span><br><span class="line">--bind-address=127.0.0.1&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ul>
<li>–master:通过本地非安全本地端口 8080 连接 apiserver。</li>
<li>–leader-elect：当该组件启动多个时，自动选举（HA）</li>
</ul>
<h4 id="生成kubeconfig文件"><a href="#生成kubeconfig文件" class="headerlink" title="生成kubeconfig文件"></a>生成kubeconfig文件</h4><p>生成kube-scheduler证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换工作目录</span></span><br><span class="line">cd ~/TLS/k8s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建证书请求文件</span></span><br><span class="line">cat &gt; kube-scheduler-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;system:kube-scheduler&quot;,</span><br><span class="line">  &quot;hosts&quot;: [],</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;names&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;O&quot;: &quot;system:masters&quot;,</span><br><span class="line">      &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>生成kubeconfig文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">KUBE_CONFIG=&quot;/opt/kubernetes/cfg/kube-scheduler.kubeconfig&quot;</span><br><span class="line">KUBE_APISERVER=&quot;https://10.150.1.35:6443&quot;</span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-credentials kube-scheduler \</span><br><span class="line">  --client-certificate=./kube-scheduler.pem \</span><br><span class="line">  --client-key=./kube-scheduler-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-scheduler \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config use-context default --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="systemd-管理-scheduler"><a href="#systemd-管理-scheduler" class="headerlink" title="systemd 管理 scheduler"></a>systemd 管理 scheduler</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-scheduler.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-scheduler \$KUBE_SCHEDULER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动-4"><a href="#启动并设置开机启动-4" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-scheduler</span><br><span class="line">systemctl enable kube-scheduler</span><br></pre></td></tr></table></figure>

<h3 id="查看集群状态-1"><a href="#查看集群状态-1" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><p>创建集群证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; admin-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;admin&quot;,</span><br><span class="line">  &quot;hosts&quot;: [],</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;names&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;O&quot;: &quot;system:masters&quot;,</span><br><span class="line">      &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>生成kubeconfig文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /root/.kube</span><br><span class="line"></span><br><span class="line">KUBE_CONFIG=&quot;/root/.kube/config&quot;</span><br><span class="line">KUBE_APISERVER=&quot;https://10.150.1.35:6443&quot;</span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-credentials cluster-admin \</span><br><span class="line">  --client-certificate=./admin.pem \</span><br><span class="line">  --client-key=./admin-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=cluster-admin \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config use-context default --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get cs</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">controller-manager   Healthy   ok                  </span><br><span class="line">scheduler            Healthy   ok                  </span><br><span class="line">etcd-2               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   </span><br><span class="line">etcd-1               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   </span><br><span class="line">etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   </span><br></pre></td></tr></table></figure>

<h1 id="部署Worker-Node"><a href="#部署Worker-Node" class="headerlink" title="部署Worker Node"></a>部署Worker Node</h1><p>下面还是在Master Node 上操作，即同时作为Worker Node</p>
<p>创建工作目录并拷贝二进制文件</p>
<p>在所有worker node创建工作目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/kubernetes/&#123;bin,cfg,ssl,logs&#125;</span><br></pre></td></tr></table></figure>

<p>从master节点拷贝：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd kubernetes/server/bin</span><br><span class="line">cp kubelet kube-proxy /opt/kubernetes/bin</span><br></pre></td></tr></table></figure>

<h2 id="部署kubelet"><a href="#部署kubelet" class="headerlink" title="部署kubelet"></a>部署kubelet</h2><h3 id="创建配置文件-3"><a href="#创建配置文件-3" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kubelet.conf &lt;&lt; EOF</span><br><span class="line">KUBELET_OPTS=&quot;--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--hostname-override=k8s-master \\</span><br><span class="line">--network-plugin=cni \\</span><br><span class="line">--kubeconfig=/opt/kubernetes/cfg/kubelet.kubeconfig \\</span><br><span class="line">--bootstrap-kubeconfig=/opt/kubernetes/cfg/bootstrap.kubeconfig \\</span><br><span class="line">--config=/opt/kubernetes/cfg/kubelet-config.yml \\</span><br><span class="line">--cert-dir=/opt/kubernetes/ssl \\</span><br><span class="line">--pod-infra-container-image=lizhenliang/pause-amd64:3.0&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ul>
<li><p> -–hostname-override：显示名称，集群中唯一 </p>
</li>
<li><p> –network-plugin：启用 CNI</p>
</li>
<li><p> –kubeconfig：空路径，会自动生成，后面用于连接 apiserver </p>
</li>
<li><p> –bootstrap-kubeconfig：首次启动向 apiserver 申请证书 </p>
</li>
<li><p> –config：配置参数文件 </p>
</li>
<li><p> –cert-dir：kubelet 证书生成目录 </p>
</li>
<li><p> –pod-infra-container-image：管理 Pod 网络容器的镜像</p>
</li>
</ul>
<p>配置参数文件</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/opt/kubernetes/cfg/kubelet-config.yml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">10250</span></span><br><span class="line"><span class="attr">readOnlyPort:</span> <span class="number">10255</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">cgroupfs</span></span><br><span class="line"><span class="attr">clusterDNS:</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">cluster.local</span> </span><br><span class="line"><span class="attr">failSwapOn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="attr">anonymous:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">webhook:</span></span><br><span class="line">    <span class="attr">cacheTTL:</span> <span class="string">2m0s</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">x509:</span></span><br><span class="line">    <span class="attr">clientCAFile:</span> <span class="string">/opt/kubernetes/ssl/ca.pem</span> </span><br><span class="line"><span class="attr">authorization:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">Webhook</span></span><br><span class="line">  <span class="attr">webhook:</span></span><br><span class="line">    <span class="attr">cacheAuthorizedTTL:</span> <span class="string">5m0s</span></span><br><span class="line">    <span class="attr">cacheUnauthorizedTTL:</span> <span class="string">30s</span></span><br><span class="line"><span class="attr">evictionHard:</span></span><br><span class="line">  <span class="attr">imagefs.available:</span> <span class="number">15</span><span class="string">%</span></span><br><span class="line">  <span class="attr">memory.available:</span> <span class="string">100Mi</span></span><br><span class="line">  <span class="attr">nodefs.available:</span> <span class="number">10</span><span class="string">%</span></span><br><span class="line">  <span class="attr">nodefs.inodesFree:</span> <span class="number">5</span><span class="string">%</span></span><br><span class="line"><span class="attr">maxOpenFiles:</span> <span class="number">1000000</span></span><br><span class="line"><span class="attr">maxPods:</span> <span class="number">110</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>生成kubelet初次加入集群引导kubeconfig文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">KUBE_CONFIG=&quot;/opt/kubernetes/cfg/bootstrap.kubeconfig&quot;</span><br><span class="line">KUBE_APISERVER=&quot;https://10.150.1.35:6443&quot; # apiserver IP:PORT</span><br><span class="line">TOKEN=&quot;741b5f19602dedbbcd4b1fb5c5248225&quot; # 与token.csv里保持一致</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成 kubelet bootstrap kubeconfig 配置文件</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-credentials &quot;kubelet-bootstrap&quot; \</span><br><span class="line">  --token=$&#123;TOKEN&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=&quot;kubelet-bootstrap&quot; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config use-context default --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="systemd-管理-kubelet"><a href="#systemd-管理-kubelet" class="headerlink" title="systemd 管理 kubelet"></a>systemd 管理 kubelet</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">After=docker.service</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kubelet.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kubelet \$KUBELET_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="授权kubelet-bootstrap用户允许请求证书"><a href="#授权kubelet-bootstrap用户允许请求证书" class="headerlink" title="授权kubelet-bootstrap用户允许请求证书"></a>授权kubelet-bootstrap用户允许请求证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap</span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动-5"><a href="#启动并设置开机启动-5" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl enable kubelet</span><br></pre></td></tr></table></figure>

<h3 id="批准-kubelet-证书申请并加入集群"><a href="#批准-kubelet-证书申请并加入集群" class="headerlink" title="批准 kubelet 证书申请并加入集群"></a>批准 kubelet 证书申请并加入集群</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s-master cfg]# kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-OPLNZD3CWwDvP7PZv0pyJhJl1jEL9M9733IiVSzfWUc   11s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line">[root@localhost cfg]# kubectl certificate approve node-csr-OPLNZD3CWwDvP7PZv0pyJhJl1jEL9M9733IiVSzfWUc</span><br><span class="line">certificatesigningrequest.certificates.k8s.io/node-csr-OPLNZD3CWwDvP7PZv0pyJhJl1jEL9M9733IiVSzfWUc approved</span><br><span class="line">[root@k8s-master cfg]# kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-OPLNZD3CWwDvP7PZv0pyJhJl1jEL9M9733IiVSzfWUc   14m   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class="line"></span><br><span class="line">[root@k8s-master cfg]# kubectl get node</span><br><span class="line">NAME         STATUS     ROLES    AGE   VERSION</span><br><span class="line">k8s-master   NotReady   &lt;none&gt;   75s   v1.20.6</span><br></pre></td></tr></table></figure>

<p> 尚未部署网络插件，故node状态会显示NotReady，待网络插件部署完成，就会显示Ready</p>
<h2 id="部署kube-proxy"><a href="#部署kube-proxy" class="headerlink" title="部署kube-proxy"></a>部署kube-proxy</h2><h3 id="创建配置文件-4"><a href="#创建配置文件-4" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-proxy.conf &lt;&lt; EOF</span><br><span class="line">KUBE_PROXY_OPTS=&quot;--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--config=/opt/kubernetes/cfg/kube-proxy-config.yml&quot;</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="配置参数文件"><a href="#配置参数文件" class="headerlink" title="配置参数文件"></a>配置参数文件</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/opt/kubernetes/cfg/kube-proxy-config.yml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">bindAddress:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">metricsBindAddress:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:10249</span></span><br><span class="line"><span class="attr">clientConnection:</span></span><br><span class="line">  <span class="attr">kubeconfig:</span> <span class="string">/opt/kubernetes/cfg/kube-proxy.kubeconfig</span></span><br><span class="line"><span class="attr">hostnameOverride:</span> <span class="string">k8s-master</span></span><br><span class="line"><span class="attr">clusterCIDR:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="生成kube-proxy证书："><a href="#生成kube-proxy证书：" class="headerlink" title="生成kube-proxy证书："></a>生成kube-proxy证书：</h3><p>切换到工作目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;system:kube-proxy&quot;,</span><br><span class="line">  &quot;hosts&quot;: [],</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">   &#125;,</span><br><span class="line">   &quot;names&quot;: [</span><br><span class="line">     &#123;</span><br><span class="line">       &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">       &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">       &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">       &quot;O&quot;: &quot;k8s&quot;,</span><br><span class="line">       &quot;OU&quot;: &quot;System&quot;</span><br><span class="line">     &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br></pre></td></tr></table></figure>

<h3 id="生成kubeconfig文件："><a href="#生成kubeconfig文件：" class="headerlink" title="生成kubeconfig文件："></a>生成kubeconfig文件：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">生成kubeconfig文件：</span><br><span class="line">KUBE_CONFIG=&quot;/opt/kubernetes/cfg/kube-proxy.kubeconfig&quot;</span><br><span class="line">KUBE_APISERVER=&quot;https://10.150.1.35:6443&quot;</span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-credentials kube-proxy \</span><br><span class="line">  --client-certificate=./kube-proxy.pem \</span><br><span class="line">  --client-key=./kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line">kubectl config use-context default --kubeconfig=$&#123;KUBE_CONFIG&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="systemd-管理-kube-proxy"><a href="#systemd-管理-kube-proxy" class="headerlink" title="systemd 管理 kube-proxy"></a>systemd 管理 kube-proxy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-proxy.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Proxy</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-proxy.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-proxy \$KUBE_PROXY_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动-6"><a href="#启动并设置开机启动-6" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-proxy</span><br><span class="line">systemctl enable kube-proxy</span><br></pre></td></tr></table></figure>

<h2 id="部署网络组件"><a href="#部署网络组件" class="headerlink" title="部署网络组件"></a>部署网络组件</h2><p>Calico是一个纯三层的数据中心网络方案，是目前Kubernetes主流的网络方案。</p>
<p>部署Calico：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line">kubectl apply -f calico.yaml</span><br><span class="line">kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure>

<p>等Calico Pod都Running，节点也会准备就绪：</p>
<p> 授权 apiserver 访问 kubelet</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; apiserver-to-kubelet-rbac.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kube-apiserver-to-kubelet</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">      - nodes/proxy</span><br><span class="line">      - nodes/stats</span><br><span class="line">      - nodes/log</span><br><span class="line">      - nodes/spec</span><br><span class="line">      - nodes/metrics</span><br><span class="line">      - pods/log</span><br><span class="line">    verbs:</span><br><span class="line">      - &quot;*&quot;</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: system:kube-apiserver</span><br><span class="line">  namespace: &quot;&quot;</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:kube-apiserver-to-kubelet</span><br><span class="line">subjects:</span><br><span class="line">  - apiGroup: rbac.authorization.k8s.io</span><br><span class="line">    kind: User</span><br><span class="line">    name: kubernetes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f apiserver-to-kubelet-rbac.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="新增加-Worker-Node"><a href="#新增加-Worker-Node" class="headerlink" title="新增加 Worker Node"></a>新增加 Worker Node</h2><h3 id="拷贝已部署好的-Node-相关文件到新节点"><a href="#拷贝已部署好的-Node-相关文件到新节点" class="headerlink" title="拷贝已部署好的 Node 相关文件到新节点"></a>拷贝已部署好的 Node 相关文件到新节点</h3><p>在 master 节点将 Worker Node 涉及文件拷贝到新节点 k8s-node1/k8s-node2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp -r /opt/kubernetes root@k8s-node1:/opt/</span><br><span class="line">scp -r /usr/lib/systemd/system/&#123;kubelet,kube-proxy&#125;.service root@k8s-node1:/usr/lib/systemd/system</span><br><span class="line">scp -r /opt/cni/ root@k8s-node2:/opt/</span><br><span class="line">scp /opt/kubernetes/ssl/ca.pem root@k8s-node2:/opt/kubernetes/ssl</span><br></pre></td></tr></table></figure>

<h3 id="删除-kubelet-证书和-kubeconf"><a href="#删除-kubelet-证书和-kubeconf" class="headerlink" title="删除 kubelet 证书和 kubeconf"></a>删除 kubelet 证书和 kubeconf</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm /opt/kubernetes/cfg/kubelet.kubeconfig</span><br><span class="line">rm -f /opt/kubernetes/ssl/kubelet*</span><br></pre></td></tr></table></figure>

<p>注：这几个文件是证书申请审批后自动生成的，每个 Node 不同，必须删除重新生成。</p>
<h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /opt/kubernetes/cfg/kubelet.conf</span><br><span class="line">--hostname-override=k8s-node1</span><br><span class="line">vi /opt/kubernetes/cfg/kube-proxy-config.yml</span><br><span class="line">hostnameOverride: k8s-node1</span><br></pre></td></tr></table></figure>

<h3 id="启动并设置开机启动-7"><a href="#启动并设置开机启动-7" class="headerlink" title="启动并设置开机启动"></a>启动并设置开机启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl enable kubelet</span><br><span class="line">systemctl start kube-proxy</span><br><span class="line">systemctl enable kube-proxy</span><br></pre></td></tr></table></figure>

<h3 id="在-Master-上批准新-Node-kubelet-证书申请"><a href="#在-Master-上批准新-Node-kubelet-证书申请" class="headerlink" title="在 Master 上批准新 Node kubelet 证书申请"></a>在 Master 上批准新 Node kubelet 证书申请</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-0bcLNxV1KJ56XaNq2acgAK77rPhwOsfCsl6lqverGoM   52s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line">node-csr-KzSmPqstZsx8uQUfcCWKiipMY6x8az8CH7xcCSQRo9s   52s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line">node-csr-OPLNZD3CWwDvP7PZv0pyJhJl1jEL9M9733IiVSzfWUc   29m   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查看-Node-状态"><a href="#查看-Node-状态" class="headerlink" title="查看 Node 状态"></a>查看 Node 状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    &lt;none&gt;   17m   v1.20.6</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;   96s   v1.20.6</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;   84s   v1.20.6</span><br></pre></td></tr></table></figure>

<p> 至此，Kubernetes搭建完成。</p>
<h1 id="故障排查"><a href="#故障排查" class="headerlink" title="故障排查"></a>故障排查</h1><h2 id="kubectl-get-csr-No-resources-found"><a href="#kubectl-get-csr-No-resources-found" class="headerlink" title="kubectl get csr   No resources found"></a>kubectl get csr   No resources found</h2><p>检查 KUBE_APISERVER 和TOKEN和实际的是否一致，如不一致，重新执行后，重启kubectl restart kubelet。然后kubectl get csr</p>
<h2 id="kube-apiserver起不来"><a href="#kube-apiserver起不来" class="headerlink" title="kube-apiserver起不来"></a>kube-apiserver起不来</h2><p>检测配置文件网段是否与物理网段重复，检查配置是否生效</p>
<h2 id="etcd节点起不来"><a href="#etcd节点起不来" class="headerlink" title="etcd节点起不来"></a>etcd节点起不来</h2><p>需要首先启动2节点和3节点 才可启动1节点</p>
<h2 id="error-invalid-authentication-config-parse-error-on-line-1-column-82-extraneous-or-missing-“-in-quoted-field"><a href="#error-invalid-authentication-config-parse-error-on-line-1-column-82-extraneous-or-missing-“-in-quoted-field" class="headerlink" title="error: invalid authentication config: parse error on line 1, column 82: extraneous or missing “ in quoted-field"></a>error: invalid authentication config: parse error on line 1, column 82: extraneous or missing “ in quoted-field</h2><p>创建token.csv文件的时候需去掉“”号</p>
<h1 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h1><p>1.<a href="https://mp.weixin.qq.com/s?__biz=MzAwNTM5Njk3Mw==&mid=2247499521&idx=1&sn=fa38080a94b344f3b77c3678c731df53&chksm=9b1fff83ac6876958b8c9668013843b5ab9635d94a3549454d5f287baccaa23bb2de0b4ecaf3&mpshare=1&scene=1&srcid=04268lfjNYUYyTsyQTxudDu9&sharer_sharetime=1619423055004&sharer_shareid=3534f5194ec3d3bc59e4bbae8fcd06e6&key=89ca70ff601187705a4bde4ea2b858102d364cf450c9974ff1e304c03913ede30045b8246200c7ef64ceab5a774952eb3474258318ebfaa8dd1a50d42e42cf56f8981efd32bd999f7913929e858d87ebdbe9b69d59b0151d20946b7b7843c3191d5484357728a31b2c7c353d7abeba30d3c936fc8276301a8507d28d28fa1821&ascene=1&uin=Mjg0NDI4NjIwMQ==&devicetype=Windows+10+x64&version=63000039&lang=zh_CN&exportkey=A4poDuyyi+Xt8aufMgfG1u8=&pass_ticket=r/0M7mYmnpe+a7ICf0wjHrzTqgS7NcT72sdzVKsSQbSMAn9jNo5BsmwZLIWrpBtl&wx_header=0">搭建一套生产级K8s高可用集群</a></p>
<p>2.<a href="https://www.cnblogs.com/digdeep/p/12252073.html">https://www.cnblogs.com/digdeep/p/12252073.html</a></p>
<p>3.<a href="http://blog.leanote.com/post/wang2020/k8s%E9%83%A8%E7%BD%B2">http://blog.leanote.com/post/wang2020/k8s%E9%83%A8%E7%BD%B2</a></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Kubernetes集群(kubeadm)</title>
    <url>/2021/05/13/%E9%83%A8%E7%BD%B2Kubernetes%E9%9B%86%E7%BE%A4-kubeadm/</url>
    <content><![CDATA[<h1 id="集群环境规划"><a href="#集群环境规划" class="headerlink" title="集群环境规划"></a>集群环境规划</h1><p><strong>安装要求</strong></p>
<p>在开始之前，部署 Kubernetes 集群机器需要满足以下几个条件：</p>
<ul>
<li>一台或多台机器，操作系统 CentOS7.x-86_x64</li>
<li>硬件配置：2GB 或更多 RAM，2 个 CPU 或更多 CPU，硬盘 30GB 或更多</li>
<li>集群中所有机器之间网络互通</li>
<li>可以访问外网，需要拉取镜像，如果服务器不能上网，需要提前下载镜像并导入节点</li>
<li>禁止 swap 分区</li>
</ul>
<h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><span id="more"></span>

<table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td>操作系统</td>
<td>CentOS Linux release 7.8.2003 (Core)</td>
</tr>
<tr>
<td>Docker</td>
<td>20.10.10</td>
</tr>
<tr>
<td>Etcd</td>
<td>3.5.0</td>
</tr>
<tr>
<td>Kubernetes</td>
<td>1.22.3</td>
</tr>
<tr>
<td>flannel</td>
<td>0.15</td>
</tr>
</tbody></table>
<h2 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h2><table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
<th>组件</th>
</tr>
</thead>
<tbody><tr>
<td>mster</td>
<td>10.150.1.35</td>
<td>kube-apiserver，kube-controller-manager，kube-scheduler， etcd</td>
</tr>
<tr>
<td>node1</td>
<td>10.150.1.36</td>
<td>kubelet，kube-proxy，docker，etcd</td>
</tr>
<tr>
<td>node2</td>
<td>10.150.1.37</td>
<td>kubelet，kube-proxy，docker，etcd</td>
</tr>
</tbody></table>
<h1 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h1><p>所有节点均需执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 selinux</span></span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config # 永久</span><br><span class="line">setenforce 0 # 临时</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 swap</span></span><br><span class="line">swapoff -a # 临时</span><br><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab # 永久</span><br><span class="line"><span class="meta">#</span><span class="bash"> 根据规划设置主机名</span></span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 master 添加 hosts</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">10.150.1.35 k8s-master</span><br><span class="line">10.150.1.36 k8s-node1</span><br><span class="line">10.150.1.37 k8s-node2</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将桥接的 IPv4 流量传递到 iptables 的链</span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system # 生效</span><br><span class="line"><span class="meta">#</span><span class="bash"> 时间同步</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure>

<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>所有节点皆需执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> step 1: 安装必要的一些系统工具</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 2: 添加软件源信息</span></span><br><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 3: 更新并安装Docker-CE</span></span><br><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 4: 开启Docker服务</span></span><br><span class="line">systemctl start docker &amp;&amp; systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改docker的cgroup-driver及日志清理策略</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;:&quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;&quot;max-size&quot;:&quot;100m&quot;, &quot;max-file&quot;:&quot;3&quot;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">重启docker</span></span><br><span class="line">systemctl daemon-reload &amp;&amp; sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<h1 id="部署Kubernetes集群"><a href="#部署Kubernetes集群" class="headerlink" title="部署Kubernetes集群"></a>部署Kubernetes集群</h1><h2 id="添加阿里源"><a href="#添加阿里源" class="headerlink" title="添加阿里源"></a>添加阿里源</h2><p>所有节点皆需执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure>

<h2 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h2><h3 id="master节点执行"><a href="#master节点执行" class="headerlink" title="master节点执行"></a>master节点执行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y kubelet-1.22.3-0 kubeadm-1.22.3-0 kubectl-1.22.3-0 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>

<h3 id="node节点执行"><a href="#node节点执行" class="headerlink" title="node节点执行"></a>node节点执行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y kubelet-1.22.3-0 kubeadm-1.22.3-0 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>

<h2 id="初始化k8s集群"><a href="#初始化k8s集群" class="headerlink" title="初始化k8s集群"></a>初始化k8s集群</h2><p>master节点执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubeadm init --kubernetes-version=1.22.3  \</span><br><span class="line">--apiserver-advertise-address=10.150.1.35   \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers  \</span><br><span class="line">--service-cidr=10.10.0.0/16 --pod-network-cidr=10.122.0.0/16</span><br></pre></td></tr></table></figure>

<p>初始化完成</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, if you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.150.1.35:6443 --token tnkfie.dmvixs5tboehs04e \</span><br><span class="line">	--discovery-token-ca-cert-hash sha256:5b95e2f05d2bcbb5e195c68dd62af326659cfb7baf92373546e794633296d0a1</span><br></pre></td></tr></table></figure>

<p>master节点执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>

<p>node节点添加到集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubeadm join 10.150.1.35:6443 --token tnkfie.dmvixs5tboehs04e \</span><br><span class="line">	--discovery-token-ca-cert-hash sha256:5b95e2f05d2bcbb5e195c68dd62af326659cfb7baf92373546e794633296d0a1</span><br></pre></td></tr></table></figure>

<h2 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure>

<p>网络不好的同学可以直接拷贝本配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">policy/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PodSecurityPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">psp.flannel.unprivileged</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/allowedProfileNames:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/defaultProfileName:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/allowedProfileNames:</span> <span class="string">runtime/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/defaultProfileName:</span> <span class="string">runtime/default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configMap</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secret</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">emptyDir</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hostPath</span></span><br><span class="line">  <span class="attr">allowedHostPaths:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">&quot;/etc/cni/net.d&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">&quot;/etc/kube-flannel&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">&quot;/run/flannel&quot;</span></span><br><span class="line">  <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Users and groups</span></span><br><span class="line">  <span class="attr">runAsUser:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">supplementalGroups:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">fsGroup:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="comment"># Privilege Escalation</span></span><br><span class="line">  <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">defaultAllowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Capabilities</span></span><br><span class="line">  <span class="attr">allowedCapabilities:</span> [<span class="string">&#x27;NET_ADMIN&#x27;</span>, <span class="string">&#x27;NET_RAW&#x27;</span>]</span><br><span class="line">  <span class="attr">defaultAddCapabilities:</span> []</span><br><span class="line">  <span class="attr">requiredDropCapabilities:</span> []</span><br><span class="line">  <span class="comment"># Host namespaces</span></span><br><span class="line">  <span class="attr">hostPID:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostIPC:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hostPorts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">min:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">max:</span> <span class="number">65535</span></span><br><span class="line">  <span class="comment"># SELinux</span></span><br><span class="line">  <span class="attr">seLinux:</span></span><br><span class="line">    <span class="comment"># SELinux is unused in CaaSP</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">&#x27;RunAsAny&#x27;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&#x27;extensions&#x27;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&#x27;podsecuritypolicies&#x27;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&#x27;use&#x27;</span>]</span><br><span class="line">  <span class="attr">resourceNames:</span> [<span class="string">&#x27;psp.flannel.unprivileged&#x27;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">cni-conf.json:</span> <span class="string">|</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;cbr0&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cniVersion&quot;:</span> <span class="string">&quot;0.3.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;plugins&quot;:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;flannel&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;delegate&quot;:</span> &#123;</span><br><span class="line">            <span class="attr">&quot;hairpinMode&quot;:</span> <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;isDefaultGateway&quot;:</span> <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;portmap&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;</span><br><span class="line">            <span class="attr">&quot;portMappings&quot;:</span> <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">net-conf.json:</span> <span class="string">|</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;Network&quot;:</span> <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;Backend&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;Type&quot;:</span> <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                <span class="attr">values:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">priorityClassName:</span> <span class="string">system-node-critical</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni-plugin</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rancher/mirrored-flannelcni-flannel-cni-plugin:v1.2</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/opt/cni/bin/flannel</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni-plugin</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/opt/cni/bin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.15.0</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.15.0</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;50Mi&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;50Mi&quot;</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">          <span class="attr">capabilities:</span></span><br><span class="line">            <span class="attr">add:</span> [<span class="string">&quot;NET_ADMIN&quot;</span>, <span class="string">&quot;NET_RAW&quot;</span>]</span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni-plugin</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/opt/cni/bin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br></pre></td></tr></table></figure>

<h2 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get node</span><br><span class="line">NAME         STATUS   ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   Ready    control-plane,master   13m   v1.22.3</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;                 10m   v1.22.3</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;                 10m   v1.22.3</span><br></pre></td></tr></table></figure>

<p>至此，Kubernetes搭建完成。</p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
</search>
